This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
ADM/CSS/adocao-adm.css
ADM/CSS/campanhas-adm.css
ADM/CSS/paginaInicial-adm.css
ADM/CSS/trabalhos-adm.css
ADM/HTML/adocao-adm.html
ADM/HTML/campanhas-adm.html
ADM/HTML/paginaInicial-adm.html
ADM/HTML/trabalhos-adm.html
ADM/JS/adocao-adm.js
ADM/JS/campanhas-adm.js
ADM/JS/firebase-adm.js
ADM/JS/paginaInicial-adm.js
ADM/JS/trabalhos-adm.js
ADM/JSON/adocao-adm.json
ADM/JSON/package-adm.json
ADM/JSON/package-lock-adm.json
Usuario/CSS/adocao.css
Usuario/CSS/campanhas.css
Usuario/CSS/login.css
Usuario/CSS/paginaInicial.css
Usuario/CSS/trabalhos.css
Usuario/HTML/adocao.html
Usuario/HTML/campanhas.html
Usuario/HTML/login.html
Usuario/HTML/paginaInicial.html
Usuario/HTML/trabalhos.html
Usuario/JS/adocao.js
Usuario/JS/campanhas.js
Usuario/JS/login.js
Usuario/JS/paginaInicial.js
Usuario/JS/trabalhos.js
Usuario/JSON/adocao.json
Usuario/JSON/package.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="ADM/CSS/adocao-adm.css">
/* Botões com os animais disponíveis para adoção */
.animals-button-container {
  display: grid; /* Cria colunas de 300px que se ajustam automaticamente ao espaço */
  grid-template-columns: repeat(auto-fit, 320px);
  justify-content: center;
  gap: 40px;
  margin-bottom: 20px;
}

/* Estilo para cada card de animal */
.animal-card {
  background-color: #1f7a8c;
  color: white;
  cursor: pointer;
  border-radius: 20px;
  text-decoration: none;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5);
  display: flex;
  /* flex-direction é 'row' por padrão; align-items é 'stretch' por padrão, o que fará a imagem e o texto preencherem a altura */
  min-height: 120px;
  cursor: pointer; /* Mudar o cursor para indicar que é clicável */
  overflow: hidden; /* Corta o conteúdo filho para respeitar o border-radius */
}

.animal-card:hover {
  background-color: #186270;
}

/* Imagem dentro do botão */
.animal-card img {
  width: 35%;
  object-fit: cover;
}

/* Container para o texto dentro do botão */
.animals-button-text-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex-grow: 1;
  padding: 1;
}

/* Linha de atributo do animal */
.animal-attribute-row {
  margin-bottom: 5px;
}
.animal-attribute-row:last-child {
  margin-bottom: 0;
}

/* Estilos para o texto dentro dos botões */
.animals-button-characteristics {
  font-size: 15px;
  font-weight: bold;
  text-align: left;
  margin-left: 20px;
}

.animals-button-definitions {
  font-size: 15px;
  font-weight: normal;
  opacity: 0.9;
  text-align: left;
}

/* Contêiner das tags de características */
.animal-tags-container {
  margin-top: 12px;
  display: grid;
  grid-template-columns: repeat(2, auto); /* Duas colunas de tamanho automático */
  justify-content: center; /* Centraliza a grade horizontalmente */
  justify-items: center; /* Centraliza os itens dentro de suas células */
  gap: 6px 6px;
}

/* Caso especial para 3 tags (pirâmide): o primeiro item ocupa as duas colunas */
.animal-tags-container > .animal-tag:first-child:nth-last-child(3) {
  grid-column: 1 / span 2;
}

/* Caso especial para 1 tag: o único item ocupa as duas colunas para ficar centralizado */
.animal-tags-container > .animal-tag:only-child {
  grid-column: 1 / span 2;
}

.animal-tag {
  display: inline-block;
  padding: 4px 12px;
  border-radius: 15px;
  font-size: 11px;
  font-weight: bold;
  color: white;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  background-color: #b30000;
}

/* Estilos do Modal (Pop-up) */

/* O fundo escuro que cobre a página */
.modal-overlay {
  display: none; /* Começa escondido */
  position: fixed; /* Fica fixo na tela, mesmo com scroll */
  z-index: 1000; /* Garante que fique na frente de tudo */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7); /* Fundo preto semi-transparente */
  justify-content: center; /* Centraliza o conteúdo horizontalmente */
  align-items: center; /* Centraliza o conteúdo verticalmente */
}

/* A caixa branca do pop-up */
.modal-content {
  background-color: #f8f9fa;
  padding: 20px 20px;
  border-radius: 15px;
  position: relative;
  width: 90%;
  max-width: 450px;
  text-align: left; /* Alinhamento geral para a esquerda */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* O botão de fechar (X) */
.modal-close {
  color: #aaa;
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 32px;
  font-weight: bold;
  cursor: pointer;
}

.modal-close:hover {
  color: #333;
}

/* Corpo do modal com layout flex para alinhar imagem e texto */
.modal-body {
  display: flex;
  align-items: flex-start;
  gap: 20px;
}

.modal-content img {
  width: 120px;
  height: 150px;
  object-fit: cover;
  border-radius: 20px;
  border: 5px solid #1F7A8C;
  flex-shrink: 0; /* Impede que a imagem encolha */
}

.modal-info h2 {
  margin-top: 0;
}

.modal-info p {
  margin: 8px 0;
}

.modal-contact {
  margin-top: 20px;
  font-size: 1.1em;
  text-align: center;
}
</file>

<file path="ADM/CSS/campanhas-adm.css">
/* Container principal das campanhas */
.campaigns {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 80px;
  padding: 40px 20px;
}

/* Wrapper para cada item de campanha (poster + ano + botão) */
.campaign-item {
  position: relative; /* para posicionar o ano */
  width: 320px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* card com a imagem */
.campaign-item .card {
  background-color: #fff;
  border-radius: 15px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  width: 100%;
  text-align: center;
}

.campaign-item .card img {
  width: 100%;
  height: 400px;
  object-fit: cover;
  display: block;
}

/* Tag com o ano da campanha */
.campaign-year {
  position: absolute;
  top: -15px; /* Puxa para cima, para fora do card */
  right: -15px; /* Puxa para a direita, para fora do card */
  background-color: #1f7a8c;
  color: white;
  padding: 8px 16px;
  border-radius: 20px;
  font-weight: bold;
  font-size: 12px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 1; /* Garante que fique sobre outros elementos se houver sobreposição */
}

/* Botão de status (estilo base) */
.campaign-status {
  display: inline-block;
  width: 45%;
  margin-top: 20px;
  padding: 12px 20px;
  border-radius: 30px;
  text-align: center;
  font-size: 12px;
  font-weight: bold;
  text-decoration: none;
  text-transform: uppercase;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

/* Estilo para campanha "Em andamento" (clicável) */
.status-ongoing {
  background-color: #1f7a8c; /* Azul principal */
  color: white;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.status-ongoing:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

/* Estilo para campanha "Encerrada" (não clicável) */
.status-closed {
  background-color: #b30000;
  color: white;
  cursor: not-allowed;
  pointer-events: none; /* Desabilita eventos de mouse */
}
</file>

<file path="ADM/CSS/trabalhos-adm.css">
/* Container principal dos cards de notícia */
.news-card-container {
  display: flex;
  flex-direction: column;
  gap: 24px;
  max-width: 900px;
  margin: 0 auto;
  padding: 20px;
}

/* Estilo individual de cada card de notícia */
.news-card {
  display: flex;
  background-color: #ffffff;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  text-decoration: none;
  color: inherit; /* Herda a cor do texto do body */
  height: 160px;
}

.news-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.news-card img {
  width: 240px;
  height: 100%;
  object-fit: cover;
  flex-shrink: 0;
}

/* Conteúdo de texto do card */
.news-text-content {
  padding: 16px 24px;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Data da notícia */
.news-date {
  font-size: 12px;
  color: #666;
  margin-bottom: 8px;
  text-transform: uppercase;
  font-weight: bold;
}

/* Título da notícia */
.news-title {
  font-size: 20px;
  font-weight: bold;
  color: #1f7a8c;
  margin: 0 0 8px 0;
  line-height: 1.2;
}

/* Resumo da notícia */
.news-summary {
  font-size: 14px;
  color: #333;
  margin: 0;
  line-height: 1.4;
  /* Limita o texto a 2 linhas para não quebrar o layout */
  display: -webkit-box;
  -webkit-line-clamp: 2; /* versão para navegadores antigos */
  line-clamp: 2; /* versão para navegadores mais modernos; faz com que a notícia não ultrapasse 2 linhas no card (p/ manter padrão) e, se ultrapassar, serão adicionados "..." ao final */
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
</file>

<file path="ADM/JSON/adocao-adm.json">
[
  {
    "id": 1,
    "name": "Biju",
    "age": "2 anos",
    "size": "Médio",
    "gender": "female",
    "isVaccinated": true,
    "isNeutered": true,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Dócil e amigável"
  },
  {
    "id": 2,
    "name": "Thor",
    "age": "1 ano",
    "size": "Grande",
    "gender": "male",
    "isVaccinated": true,
    "isNeutered": false,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Brincalhão e ativo"
  },
  {
    "id": 3,
    "name": "Luna",
    "age": "3 anos",
    "size": "Pequeno",
    "gender": "female",
    "isVaccinated": false,
    "isNeutered": true,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Calma e carinhosa"
  },
  {
    "id": 4,
    "name": "Max",
    "age": "5 meses",
    "size": "Pequeno",
    "gender": "male",
    "isVaccinated": false,
    "isNeutered": false,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Curioso e medroso"
  }
]
</file>

<file path="ADM/JSON/package-adm.json">
{
  "dependencies": {
    "firebase": "^12.1.0"
  }
}
</file>

<file path="ADM/JSON/package-lock-adm.json">
{
  "name": "SITE FETIN",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "dependencies": {
        "firebase": "^12.1.0"
      }
    },
    "node_modules/@firebase/ai": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/ai/-/ai-2.1.0.tgz",
      "integrity": "sha512-4HvFr4YIzNFh0MowJLahOjJDezYSTjQar0XYVu/sAycoxQ+kBsfXuTPRLVXCYfMR5oNwQgYe4Q2gAOYKKqsOyA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/analytics": {
      "version": "0.10.18",
      "resolved": "https://registry.npmjs.org/@firebase/analytics/-/analytics-0.10.18.tgz",
      "integrity": "sha512-iN7IgLvM06iFk8BeFoWqvVpRFW3Z70f+Qe2PfCJ7vPIgLPjHXDE774DhCT5Y2/ZU/ZbXPDPD60x/XPWEoZLNdg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/analytics-compat": {
      "version": "0.2.24",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-compat/-/analytics-compat-0.2.24.tgz",
      "integrity": "sha512-jE+kJnPG86XSqGQGhXXYt1tpTbCTED8OQJ/PQ90SEw14CuxRxx/H+lFbWA1rlFtFSsTCptAJtgyRBwr/f00vsw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/analytics": "0.10.18",
        "@firebase/analytics-types": "0.8.3",
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/analytics-types": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-types/-/analytics-types-0.8.3.tgz",
      "integrity": "sha512-VrIp/d8iq2g501qO46uGz3hjbDb8xzYMrbu8Tp0ovzIzrvJZ2fvmj649gTjge/b7cCCcjT0H37g1gVtlNhnkbg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app": {
      "version": "0.14.1",
      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.14.1.tgz",
      "integrity": "sha512-jxTrDbxnGoX7cGz7aP9E7v9iKvBbQfZ8Gz4TH3SfrrkcyIojJM3+hJnlbGnGxHrABts844AxRcg00arMZEyA6Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/app-check": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@firebase/app-check/-/app-check-0.11.0.tgz",
      "integrity": "sha512-XAvALQayUMBJo58U/rxW02IhsesaxxfWVmVkauZvGEz3vOAjMEQnzFlyblqkc2iAaO82uJ2ZVyZv9XzPfxjJ6w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/app-check-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-compat/-/app-check-compat-0.4.0.tgz",
      "integrity": "sha512-UfK2Q8RJNjYM/8MFORltZRG9lJj11k0nW84rrffiKvcJxLf1jf6IEjCIkCamykHE73C6BwqhVfhIBs69GXQV0g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check": "0.11.0",
        "@firebase/app-check-types": "0.5.3",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/app-check-interop-types": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-interop-types/-/app-check-interop-types-0.3.3.tgz",
      "integrity": "sha512-gAlxfPLT2j8bTI/qfe3ahl2I2YcBQ8cFIBdhAQA4I2f3TndcO+22YizyGYuttLHPQEpWkhmpFW60VCFEPg4g5A==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-check-types": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-types/-/app-check-types-0.5.3.tgz",
      "integrity": "sha512-hyl5rKSj0QmwPdsAxrI5x1otDlByQ7bvNvVt8G/XPO2CSwE++rmSVf3VEhaeOR4J8ZFaF0Z0NDSmLejPweZ3ng==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-compat": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/@firebase/app-compat/-/app-compat-0.5.1.tgz",
      "integrity": "sha512-BEy1L6Ufd85ZSP79HDIv0//T9p7d5Bepwy+2mKYkgdXBGKTbFm2e2KxyF1nq4zSQ6RRBxWi0IY0zFVmoBTZlUA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app": "0.14.1",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/app-types": {
      "version": "0.9.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.3.tgz",
      "integrity": "sha512-kRVpIl4vVGJ4baogMDINbyrIOtOxqhkZQg4jTq3l8Lw6WSk0xfpEYzezFu+Kl4ve4fbPl79dvwRtaFqAC/ucCw==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.11.0.tgz",
      "integrity": "sha512-5j7+ua93X+IRcJ1oMDTClTo85l7Xe40WSkoJ+shzPrX7OISlVWLdE1mKC57PSD+/LfAbdhJmvKixINBw2ESK6w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@react-native-async-storage/async-storage": "^1.18.1"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@firebase/auth-compat": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.6.0.tgz",
      "integrity": "sha512-J0lGSxXlG/lYVi45wbpPhcWiWUMXevY4fvLZsN1GHh+po7TZVng+figdHBVhFheaiipU8HZyc7ljw1jNojM2nw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth": "1.11.0",
        "@firebase/auth-types": "0.13.0",
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/auth-interop-types": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.4.tgz",
      "integrity": "sha512-JPgcXKCuO+CWqGDnigBtvo09HeBs5u/Ktc2GaFj2m01hLarbxthLNm7Fk8iOP1aqAtXV+fnnGj7U28xmk7IwVA==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth-types": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth-types/-/auth-types-0.13.0.tgz",
      "integrity": "sha512-S/PuIjni0AQRLF+l9ck0YpsMOdE8GO2KU6ubmBB7P+7TJUCQDa3R1dlgYm9UzGbbePMZsp0xzB93f2b/CgxMOg==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/component": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.7.0.tgz",
      "integrity": "sha512-wR9En2A+WESUHexjmRHkqtaVH94WLNKt6rmeqZhSLBybg4Wyf0Umk04SZsS6sBq4102ZsDBFwoqMqJYj2IoDSg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/data-connect": {
      "version": "0.3.11",
      "resolved": "https://registry.npmjs.org/@firebase/data-connect/-/data-connect-0.3.11.tgz",
      "integrity": "sha512-G258eLzAD6im9Bsw+Qm1Z+P4x0PGNQ45yeUuuqe5M9B1rn0RJvvsQCRHXgE52Z+n9+WX1OJd/crcuunvOGc7Vw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/database": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.1.0.tgz",
      "integrity": "sha512-gM6MJFae3pTyNLoc9VcJNuaUDej0ctdjn3cVtILo3D5lpp0dmUHHLFN/pUKe7ImyeB1KAvRlEYxvIHNF04Filg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "faye-websocket": "0.11.4",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/database-compat": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-2.1.0.tgz",
      "integrity": "sha512-8nYc43RqxScsePVd1qe1xxvWNf0OBnbwHxmXJ7MHSuuTVYFO3eLyLW3PiCKJ9fHnmIz4p4LbieXwz+qtr9PZDg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/database": "1.1.0",
        "@firebase/database-types": "1.0.16",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/database-types": {
      "version": "1.0.16",
      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.16.tgz",
      "integrity": "sha512-xkQLQfU5De7+SPhEGAXFBnDryUWhhlFXelEg2YeZOQMCdoe7dL64DDAd77SQsR+6uoXIZY5MB4y/inCs4GTfcw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-types": "0.9.3",
        "@firebase/util": "1.13.0"
      }
    },
    "node_modules/@firebase/firestore": {
      "version": "4.9.0",
      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-4.9.0.tgz",
      "integrity": "sha512-5zl0+/h1GvlCSLt06RMwqFsd7uqRtnNZt4sW99k2rKRd6k/ECObIWlEnvthm2cuOSnUmwZknFqtmd1qyYSLUuQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "@firebase/webchannel-wrapper": "1.0.4",
        "@grpc/grpc-js": "~1.9.0",
        "@grpc/proto-loader": "^0.7.8",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/firestore-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-compat/-/firestore-compat-0.4.0.tgz",
      "integrity": "sha512-4O7v4VFeSEwAZtLjsaj33YrMHMRjplOIYC2CiYsF6o/MboOhrhe01VrTt8iY9Y5EwjRHuRz4pS6jMBT8LfQYJA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/firestore": "4.9.0",
        "@firebase/firestore-types": "3.0.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/firestore-types": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-types/-/firestore-types-3.0.3.tgz",
      "integrity": "sha512-hD2jGdiWRxB/eZWF89xcK9gF8wvENDJkzpVFb4aGkzfEaKxVRD1kjz1t1Wj8VZEp2LCB53Yx1zD8mrhQu87R6Q==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/functions": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.13.0.tgz",
      "integrity": "sha512-2/LH5xIbD8aaLOWSFHAwwAybgSzHIM0dB5oVOL0zZnxFG1LctX2bc1NIAaPk1T+Zo9aVkLKUlB5fTXTkVUQprQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.7.0",
        "@firebase/messaging-interop-types": "0.2.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/functions-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/functions-compat/-/functions-compat-0.4.0.tgz",
      "integrity": "sha512-VPgtvoGFywWbQqtvgJnVWIDFSHV1WE6Hmyi5EGI+P+56EskiGkmnw6lEqc/MEUfGpPGdvmc4I9XMU81uj766/g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/functions": "0.13.0",
        "@firebase/functions-types": "0.6.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/functions-types": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/@firebase/functions-types/-/functions-types-0.6.3.tgz",
      "integrity": "sha512-EZoDKQLUHFKNx6VLipQwrSMh01A1SaL3Wg6Hpi//x6/fJ6Ee4hrAeswK99I5Ht8roiniKHw4iO0B1Oxj5I4plg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/installations": {
      "version": "0.6.19",
      "resolved": "https://registry.npmjs.org/@firebase/installations/-/installations-0.6.19.tgz",
      "integrity": "sha512-nGDmiwKLI1lerhwfwSHvMR9RZuIH5/8E3kgUWnVRqqL7kGVSktjLTWEMva7oh5yxQ3zXfIlIwJwMcaM5bK5j8Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/installations-compat": {
      "version": "0.2.19",
      "resolved": "https://registry.npmjs.org/@firebase/installations-compat/-/installations-compat-0.2.19.tgz",
      "integrity": "sha512-khfzIY3EI5LePePo7vT19/VEIH1E3iYsHknI/6ek9T8QCozAZshWT9CjlwOzZrKvTHMeNcbpo/VSOSIWDSjWdQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/installations-types": "0.5.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/installations-types": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@firebase/installations-types/-/installations-types-0.5.3.tgz",
      "integrity": "sha512-2FJI7gkLqIE0iYsNQ1P751lO3hER+Umykel+TkLwHj6plzWVxqvfclPUZhcKFVQObqloEBTmpi2Ozn7EkCABAA==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/logger": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.5.0.tgz",
      "integrity": "sha512-cGskaAvkrnh42b3BA3doDWeBmuHFO/Mx5A83rbRDYakPjO9bJtRL3dX7javzc2Rr/JHZf4HlterTW2lUkfeN4g==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/messaging": {
      "version": "0.12.23",
      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.12.23.tgz",
      "integrity": "sha512-cfuzv47XxqW4HH/OcR5rM+AlQd1xL/VhuaeW/wzMW1LFrsFcTn0GND/hak1vkQc2th8UisBcrkVcQAnOnKwYxg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/messaging-interop-types": "0.2.3",
        "@firebase/util": "1.13.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/messaging-compat": {
      "version": "0.2.23",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-compat/-/messaging-compat-0.2.23.tgz",
      "integrity": "sha512-SN857v/kBUvlQ9X/UjAqBoQ2FEaL1ZozpnmL1ByTe57iXkmnVVFm9KqAsTfmf+OEwWI4kJJe9NObtN/w22lUgg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/messaging": "0.12.23",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/messaging-interop-types": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-interop-types/-/messaging-interop-types-0.2.3.tgz",
      "integrity": "sha512-xfzFaJpzcmtDjycpDeCUj0Ge10ATFi/VHVIvEEjDNc3hodVBQADZ7BWQU7CuFpjSHE+eLuBI13z5F/9xOoGX8Q==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/performance": {
      "version": "0.7.9",
      "resolved": "https://registry.npmjs.org/@firebase/performance/-/performance-0.7.9.tgz",
      "integrity": "sha512-UzybENl1EdM2I1sjYm74xGt/0JzRnU/0VmfMAKo2LSpHJzaj77FCLZXmYQ4oOuE+Pxtt8Wy2BVJEENiZkaZAzQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0",
        "web-vitals": "^4.2.4"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/performance-compat": {
      "version": "0.2.22",
      "resolved": "https://registry.npmjs.org/@firebase/performance-compat/-/performance-compat-0.2.22.tgz",
      "integrity": "sha512-xLKxaSAl/FVi10wDX/CHIYEUP13jXUjinL+UaNXT9ByIvxII5Ne5150mx6IgM8G6Q3V+sPiw9C8/kygkyHUVxg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/performance": "0.7.9",
        "@firebase/performance-types": "0.2.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/performance-types": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.2.3.tgz",
      "integrity": "sha512-IgkyTz6QZVPAq8GSkLYJvwSLr3LS9+V6vNPQr0x4YozZJiLF5jYixj0amDtATf1X0EtYHqoPO48a9ija8GocxQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/remote-config": {
      "version": "0.6.6",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config/-/remote-config-0.6.6.tgz",
      "integrity": "sha512-Yelp5xd8hM4NO1G1SuWrIk4h5K42mNwC98eWZ9YLVu6Z0S6hFk1mxotAdCRmH2luH8FASlYgLLq6OQLZ4nbnCA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-compat": {
      "version": "0.2.19",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-compat/-/remote-config-compat-0.2.19.tgz",
      "integrity": "sha512-y7PZAb0l5+5oIgLJr88TNSelxuASGlXyAKj+3pUc4fDuRIdPNBoONMHaIUa9rlffBR5dErmaD2wUBJ7Z1a513Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/remote-config": "0.6.6",
        "@firebase/remote-config-types": "0.4.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-types": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-types/-/remote-config-types-0.4.0.tgz",
      "integrity": "sha512-7p3mRE/ldCNYt8fmWMQ/MSGRmXYlJ15Rvs9Rk17t8p0WwZDbeK7eRmoI1tvCPaDzn9Oqh+yD6Lw+sGLsLg4kKg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/storage": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.14.0.tgz",
      "integrity": "sha512-xWWbb15o6/pWEw8H01UQ1dC5U3rf8QTAzOChYyCpafV6Xki7KVp3Yaw2nSklUwHEziSWE9KoZJS7iYeyqWnYFA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/storage-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/storage-compat/-/storage-compat-0.4.0.tgz",
      "integrity": "sha512-vDzhgGczr1OfcOy285YAPur5pWDEvD67w4thyeCUh6Ys0izN9fNYtA1MJERmNBfqjqu0lg0FM5GLbw0Il21M+g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/storage": "0.14.0",
        "@firebase/storage-types": "0.8.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/storage-types": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/@firebase/storage-types/-/storage-types-0.8.3.tgz",
      "integrity": "sha512-+Muk7g9uwngTpd8xn9OdF/D48uiQ7I1Fae7ULsWPuKoCH3HU7bfFPhxtJYzyhjdniowhuDpQcfPmuNRAqZEfvg==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/util": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.13.0.tgz",
      "integrity": "sha512-0AZUyYUfpMNcztR5l09izHwXkZpghLgCUaAGjtMwXnCg3bj4ml5VgiwqOMOxJ+Nw4qN/zJAaOQBcJ7KGkWStqQ==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/webchannel-wrapper": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-1.0.4.tgz",
      "integrity": "sha512-6m8+P+dE/RPl4OPzjTxcTbQ0rGeRyeTvAi9KwIffBVCiAMKrfXfLZaqD1F+m8t4B5/Q5aHsMozOgirkH1F5oMQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@grpc/grpc-js": {
      "version": "1.9.15",
      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.15.tgz",
      "integrity": "sha512-nqE7Hc0AzI+euzUwDAy0aY5hCp10r734gMGRdU+qOPX0XSceI2ULrcXB5U2xSc5VkWwalCj4M7GzCAygZl2KoQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@grpc/proto-loader": "^0.7.8",
        "@types/node": ">=12.12.47"
      },
      "engines": {
        "node": "^8.13.0 || >=10.10.0"
      }
    },
    "node_modules/@grpc/proto-loader": {
      "version": "0.7.15",
      "resolved": "https://registry.npmjs.org/@grpc/proto-loader/-/proto-loader-0.7.15.tgz",
      "integrity": "sha512-tMXdRCfYVixjuFK+Hk0Q1s38gV9zDiDJfWL3h1rv4Qc39oILCu1TRTDt7+fGUI8K4G1Fj125Hx/ru3azECWTyQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "lodash.camelcase": "^4.3.0",
        "long": "^5.0.0",
        "protobufjs": "^7.2.5",
        "yargs": "^17.7.2"
      },
      "bin": {
        "proto-loader-gen-types": "build/bin/proto-loader-gen-types.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@protobufjs/aspromise": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
      "integrity": "sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/base64": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
      "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/codegen": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
      "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/eventemitter": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
      "integrity": "sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/fetch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
      "integrity": "sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.1",
        "@protobufjs/inquire": "^1.1.0"
      }
    },
    "node_modules/@protobufjs/float": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
      "integrity": "sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/inquire": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
      "integrity": "sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/path": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
      "integrity": "sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/pool": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
      "integrity": "sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/utf8": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
      "integrity": "sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@types/node": {
      "version": "24.3.0",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.3.0.tgz",
      "integrity": "sha512-aPTXCrfwnDLj4VvXrm+UUCQjNEvJgNA8s5F1cvwQU+3KNltTOkBm1j30uNLyqqPNe7gE3KFzImYoZEfLhp4Yow==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~7.10.0"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/faye-websocket": {
      "version": "0.11.4",
      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.4.tgz",
      "integrity": "sha512-CzbClwlXAuiRQAlUyfqPgvPoNKTckTPGfwZV4ZdAhVcP2lh9KUxJg2b5GkE7XbjKQ3YJnQ9z6D9ntLAlB+tP8g==",
      "license": "Apache-2.0",
      "dependencies": {
        "websocket-driver": ">=0.5.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/firebase": {
      "version": "12.1.0",
      "resolved": "https://registry.npmjs.org/firebase/-/firebase-12.1.0.tgz",
      "integrity": "sha512-oZucxvfWKuAW4eHHRqGKzC43fLiPqPwHYBHPRNsnkgonqYaq0VurYgqgBosRlEulW+TWja/5Tpo2FpUU+QrfEQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/ai": "2.1.0",
        "@firebase/analytics": "0.10.18",
        "@firebase/analytics-compat": "0.2.24",
        "@firebase/app": "0.14.1",
        "@firebase/app-check": "0.11.0",
        "@firebase/app-check-compat": "0.4.0",
        "@firebase/app-compat": "0.5.1",
        "@firebase/app-types": "0.9.3",
        "@firebase/auth": "1.11.0",
        "@firebase/auth-compat": "0.6.0",
        "@firebase/data-connect": "0.3.11",
        "@firebase/database": "1.1.0",
        "@firebase/database-compat": "2.1.0",
        "@firebase/firestore": "4.9.0",
        "@firebase/firestore-compat": "0.4.0",
        "@firebase/functions": "0.13.0",
        "@firebase/functions-compat": "0.4.0",
        "@firebase/installations": "0.6.19",
        "@firebase/installations-compat": "0.2.19",
        "@firebase/messaging": "0.12.23",
        "@firebase/messaging-compat": "0.2.23",
        "@firebase/performance": "0.7.9",
        "@firebase/performance-compat": "0.2.22",
        "@firebase/remote-config": "0.6.6",
        "@firebase/remote-config-compat": "0.2.19",
        "@firebase/storage": "0.14.0",
        "@firebase/storage-compat": "0.4.0",
        "@firebase/util": "1.13.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/http-parser-js": {
      "version": "0.5.10",
      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.10.tgz",
      "integrity": "sha512-Pysuw9XpUq5dVc/2SMHpuTY01RFl8fttgcyunjL7eEMhGM3cI4eOmiCycJDVCo/7O7ClfQD3SaI6ftDzqOXYMA==",
      "license": "MIT"
    },
    "node_modules/idb": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/idb/-/idb-7.1.1.tgz",
      "integrity": "sha512-gchesWBzyvGHRO9W8tzUWFDycow5gwjvFKfyV9FF32Y7F50yZMp7mP+T2mJIWFx49zicqyC4uefHM17o6xKIVQ==",
      "license": "ISC"
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lodash.camelcase": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
      "integrity": "sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA==",
      "license": "MIT"
    },
    "node_modules/long": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/long/-/long-5.3.2.tgz",
      "integrity": "sha512-mNAgZ1GmyNhD7AuqnTG3/VQ26o760+ZYBPKjPvugO8+nLbYfX6TVpJPseBvopbdY+qpZ/lKUnmEc1LeZYS3QAA==",
      "license": "Apache-2.0"
    },
    "node_modules/protobufjs": {
      "version": "7.5.4",
      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-7.5.4.tgz",
      "integrity": "sha512-CvexbZtbov6jW2eXAvLukXjXUW1TzFaivC46BpWc/3BpcCysb5Vffu+B3XHMm8lVEuy2Mm4XGex8hBSg1yapPg==",
      "hasInstallScript": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.2",
        "@protobufjs/base64": "^1.1.2",
        "@protobufjs/codegen": "^2.0.4",
        "@protobufjs/eventemitter": "^1.1.0",
        "@protobufjs/fetch": "^1.1.0",
        "@protobufjs/float": "^1.0.2",
        "@protobufjs/inquire": "^1.1.0",
        "@protobufjs/path": "^1.1.2",
        "@protobufjs/pool": "^1.1.0",
        "@protobufjs/utf8": "^1.1.0",
        "@types/node": ">=13.7.0",
        "long": "^5.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/undici-types": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.10.0.tgz",
      "integrity": "sha512-t5Fy/nfn+14LuOc2KNYg75vZqClpAiqscVvMygNnlsHBFpSXdJaYtXMcdNLpl/Qvc3P2cB3s6lOV51nqsFq4ag==",
      "license": "MIT"
    },
    "node_modules/web-vitals": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/web-vitals/-/web-vitals-4.2.4.tgz",
      "integrity": "sha512-r4DIlprAGwJ7YM11VZp4R884m0Vmgr6EAKe3P+kO0PPj3Unqyvv59rczf6UiGcb9Z8QxZVcqKNwv/g0WNdWwsw==",
      "license": "Apache-2.0"
    },
    "node_modules/websocket-driver": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.4.tgz",
      "integrity": "sha512-b17KeDIQVjvb0ssuSDF2cYXSg2iztliJ4B9WdsuB6J952qCPKmnVq4DyW5motImXHDC1cBT/1UezrJVsKw5zjg==",
      "license": "Apache-2.0",
      "dependencies": {
        "http-parser-js": ">=0.5.1",
        "safe-buffer": ">=5.1.0",
        "websocket-extensions": ">=0.1.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/websocket-extensions": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.4.tgz",
      "integrity": "sha512-OqedPIGOfsDlo31UNwYbCFMSaO9m9G/0faIHj5/dZFDMFqPTcx6UwqyOy3COEaEOg/9VsGIpdqn62W5KhoKSpg==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    }
  }
}
</file>

<file path="Usuario/CSS/adocao.css">
/* Botões com os animais disponíveis para adoção */
.animals-button-container {
  display: grid; /* Cria colunas de 300px que se ajustam automaticamente ao espaço */
  grid-template-columns: repeat(auto-fit, 320px);
  justify-content: center;
  gap: 40px;
  margin-bottom: 20px;
}

/* Estilo para cada card de animal */
.animal-card {
  background-color: #1f7a8c;
  color: white;
  cursor: pointer;
  border-radius: 20px;
  text-decoration: none;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5);
  display: flex;
  /* flex-direction é 'row' por padrão; align-items é 'stretch' por padrão, o que fará a imagem e o texto preencherem a altura */
  min-height: 120px;
  cursor: pointer; /* Mudar o cursor para indicar que é clicável */
  overflow: hidden; /* Corta o conteúdo filho para respeitar o border-radius */
}

.animal-card:hover {
  background-color: #186270;
}

/* Imagem dentro do botão */
.animal-card img {
  width: 35%;
  object-fit: cover;
}

/* Container para o texto dentro do botão */
.animals-button-text-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex-grow: 1;
  padding: 1;
}

/* Linha de atributo do animal */
.animal-attribute-row {
  margin-bottom: 5px;
}
.animal-attribute-row:last-child {
  margin-bottom: 0;
}

/* Estilos para o texto dentro dos botões */
.animals-button-characteristics {
  font-size: 15px;
  font-weight: bold;
  text-align: left;
  margin-left: 20px;
}

.animals-button-definitions {
  font-size: 15px;
  font-weight: normal;
  opacity: 0.9;
  text-align: left;
}

/* Contêiner das tags de características */
.animal-tags-container {
  margin-top: 12px;
  display: grid;
  grid-template-columns: repeat(2, auto); /* Duas colunas de tamanho automático */
  justify-content: center; /* Centraliza a grade horizontalmente */
  justify-items: center; /* Centraliza os itens dentro de suas células */
  gap: 6px 6px;
}

/* Caso especial para 3 tags (pirâmide): o primeiro item ocupa as duas colunas */
.animal-tags-container > .animal-tag:first-child:nth-last-child(3) {
  grid-column: 1 / span 2;
}

/* Caso especial para 1 tag: o único item ocupa as duas colunas para ficar centralizado */
.animal-tags-container > .animal-tag:only-child {
  grid-column: 1 / span 2;
}

.animal-tag {
  display: inline-block;
  padding: 4px 12px;
  border-radius: 15px;
  font-size: 11px;
  font-weight: bold;
  color: white;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  background-color: #b30000;
}

/* Estilos do Modal (Pop-up) */

/* O fundo escuro que cobre a página */
.modal-overlay {
  display: none; /* Começa escondido */
  position: fixed; /* Fica fixo na tela, mesmo com scroll */
  z-index: 1000; /* Garante que fique na frente de tudo */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7); /* Fundo preto semi-transparente */
  justify-content: center; /* Centraliza o conteúdo horizontalmente */
  align-items: center; /* Centraliza o conteúdo verticalmente */
}

/* A caixa branca do pop-up */
.modal-content {
  background-color: #f8f9fa;
  padding: 20px 20px;
  border-radius: 15px;
  position: relative;
  width: 90%;
  max-width: 450px;
  text-align: left; /* Alinhamento geral para a esquerda */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* O botão de fechar (X) */
.modal-close {
  color: #aaa;
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 32px;
  font-weight: bold;
  cursor: pointer;
}

.modal-close:hover {
  color: #333;
}

/* Corpo do modal com layout flex para alinhar imagem e texto */
.modal-body {
  display: flex;
  align-items: flex-start;
  gap: 20px;
}

.modal-content img {
  width: 120px;
  height: 150px;
  object-fit: cover;
  border-radius: 20px;
  border: 5px solid #1F7A8C;
  flex-shrink: 0; /* Impede que a imagem encolha */
}

.modal-info h2 {
  margin-top: 0;
}

.modal-info p {
  margin: 8px 0;
}

.modal-contact {
  margin-top: 20px;
  font-size: 1.1em;
  text-align: center;
}
</file>

<file path="Usuario/CSS/campanhas.css">
/* Container principal das campanhas */
.campaigns {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 80px;
  padding: 40px 20px;
}

/* Wrapper para cada item de campanha (poster + ano + botão) */
.campaign-item {
  position: relative; /* para posicionar o ano */
  width: 320px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* card com a imagem */
.campaign-item .card {
  background-color: #fff;
  border-radius: 15px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  width: 100%;
  text-align: center;
}

.campaign-item .card img {
  width: 100%;
  height: 400px;
  object-fit: cover;
  display: block;
}

/* Tag com o ano da campanha */
.campaign-year {
  position: absolute;
  top: -15px; /* Puxa para cima, para fora do card */
  right: -15px; /* Puxa para a direita, para fora do card */
  background-color: #1f7a8c;
  color: white;
  padding: 8px 16px;
  border-radius: 20px;
  font-weight: bold;
  font-size: 12px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 1; /* Garante que fique sobre outros elementos se houver sobreposição */
}

/* Botão de status (estilo base) */
.campaign-status {
  display: inline-block;
  width: 45%;
  margin-top: 20px;
  padding: 12px 20px;
  border-radius: 30px;
  text-align: center;
  font-size: 12px;
  font-weight: bold;
  text-decoration: none;
  text-transform: uppercase;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

/* Estilo para campanha "Em andamento" (clicável) */
.status-ongoing {
  background-color: #1f7a8c; /* Azul principal */
  color: white;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.status-ongoing:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

/* Estilo para campanha "Encerrada" (não clicável) */
.status-closed {
  background-color: #b30000;
  color: white;
  cursor: not-allowed;
  pointer-events: none; /* Desabilita eventos de mouse */
}
</file>

<file path="Usuario/CSS/trabalhos.css">
/* Container principal dos cards de notícia */
.news-card-container {
  display: flex;
  flex-direction: column;
  gap: 24px;
  max-width: 900px;
  margin: 0 auto;
  padding: 20px;
}

/* Estilo individual de cada card de notícia */
.news-card {
  display: flex;
  background-color: #ffffff;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  text-decoration: none;
  color: inherit; /* Herda a cor do texto do body */
  height: 160px;
}

.news-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.news-card img {
  width: 240px;
  height: 100%;
  object-fit: cover;
  flex-shrink: 0;
}

/* Conteúdo de texto do card */
.news-text-content {
  padding: 16px 24px;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Data da notícia */
.news-date {
  font-size: 12px;
  color: #666;
  margin-bottom: 8px;
  text-transform: uppercase;
  font-weight: bold;
}

/* Título da notícia */
.news-title {
  font-size: 20px;
  font-weight: bold;
  color: #1f7a8c;
  margin: 0 0 8px 0;
  line-height: 1.2;
}

/* Resumo da notícia */
.news-summary {
  font-size: 14px;
  color: #333;
  margin: 0;
  line-height: 1.4;
  /* Limita o texto a 2 linhas para não quebrar o layout */
  display: -webkit-box;
  -webkit-line-clamp: 2; /* versão para navegadores antigos */
  line-clamp: 2; /* versão para navegadores mais modernos; faz com que a notícia não ultrapasse 2 linhas no card (p/ manter padrão) e, se ultrapassar, serão adicionados "..." ao final */
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
</file>

<file path="Usuario/HTML/campanhas.html">
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página de Campanhas</title>
    <link rel="stylesheet" href="../CSS/paginaInicial.css" />
    <link rel="stylesheet" href="../CSS/campanhas.css" />
    <!-- Ícones do google -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
  </head>

  <body>
    <header>
      <div class="top-bar-main">
        <img src="../../imagens/logo.png" alt="Logo" />
      </div>
      <div class="top-bar-secondary"></div>
    </header>

    <div class="summary-text">
      <a href="paginaInicial.html" class="back"><span class="material-symbols-outlined">arrow_circle_left</span></a>
      <h1 class="summary-title">Campanhas de vacinação e castração</h1>
      <p class="summary-subtitle">Acompanhe as informações acerca das  campanhas voltadas à causa animal realizadas pela prefeitura de Santa Rita do Sapucaí.</p>
    </div>

    <!-- Este contêiner será preenchido dinamicamente pelo JavaScript -->
    <section class="campaigns" id="campaigns-list">
      <!-- O conteúdo das campanhas será inserido aqui -->
    </section>

    <script src="../JS/campanhas.js"></script>
  </body>
</html>
</file>

<file path="Usuario/HTML/login.html">
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página de Login</title>
    <link rel="stylesheet" href="../CSS/paginaInicial.css" />
    <link rel="stylesheet" href="../CSS/login.css" />
    <!-- Ícones do google -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
  </head>

  <body class="login-bg">
    <header>
      <div class="top-bar-main">
        <img src="../../imagens/logo.png" alt="Logo" />
      </div>
      <div class="top-bar-secondary"></div>
    </header>

    <div class="summary-text">
      <a href="paginaInicial.html" class="back"><span class="material-symbols-outlined">arrow_circle_left</span></a>
    </div>

    <!-- cenário com pegadas + logo grande à direita -->
    <main class="login-stage">
      <!-- card de login -->
      <section class="login-card">
        <h2>Bem vindo ao <span class="accent">LOGIN</span></h2>
        <p class="subtitle">Preencha os dados de login para acessar</p>

        <form id="loginForm" autocomplete="on">
          <label class="field">
            <span>Usuário (email)</span>
            <div class="input-wrap">
              <input
                type="email"
                id="email"
                placeholder="exemplo@dominio.com"
                required
              />
              <span class="icon"><span class="material-symbols-outlined">person</span></span>
            </div>
          </label>

          <label class="field">
            <span>Senha</span>
            <div class="input-wrap">
              <input
                type="password"
                id="password"
                placeholder="••••••••"
                required
              />
              <button
                type="button"
                class="icon btn-eye"
                id="togglePwd"
                aria-label="Mostrar/ocultar senha"
              >
              <span class="icon"><span class="material-symbols-outlined">visibility</span></span>
              </button>
            </div>
          </label>

          <button class="btn-login" type="submit">ENTRAR</button>
          <p class="error" id="errorBox" role="alert" aria-live="polite"></p>
        </form>

        <div class="helper-links">
          <a id="forgotLink" href="#">Esqueci minha senha</a>
        </div>
      </section>

      <!-- logo redondo à direita (pode ser imagem ou CSS) -->
      <div class="login-logo">
        <img src="../../imagens/logo-redondo.png" alt="Street To Sweet" />
      </div>
    </main>

    <!-- O script de login é um módulo, pois usa 'import' do Firebase. -->
    <script type="module" src="../JS/login.js"></script>
  </body>
</html>
</file>

<file path="Usuario/HTML/trabalhos.html">
<!DOCTYPE html>
<html lang="pt-BR">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Página de trabalhos realizados</title>
        <link rel="stylesheet" href="../CSS/paginaInicial.css" />
        <link rel="stylesheet" href="../CSS/trabalhos.css" />
        <!-- Ícones do google -->
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    </head>

    <body>
        <header>
            <div class="top-bar-main">
                <img src="../../imagens/logo.png" alt="Logo" />
            </div>
            <div class="top-bar-secondary"></div>
            </header>

            <div class="summary-text">
            <a href="paginaInicial.html" class="back"><span class="material-symbols-outlined">arrow_circle_left</span></a>
            <h1 class="summary-title">Trabalhos realizados</h1>
            <p class="summary-subtitle">A atuação da associação vai muito além! Confira nossas ações!</p>
            </div>

        <!-- O container abaixo será preenchido dinamicamente pelo JavaScript -->
        <main class="news-card-container" id="news-list">
            <!-- Os cards de notícia serão inseridos aqui -->
        </main>
        <script src="../JS/trabalhos.js"></script>
    </body>
</html>
</file>

<file path="Usuario/JS/campanhas.js">
document.addEventListener("DOMContentLoaded", function () {
  // ---- PASSO IMPORTANTE ----
  // Quando o banco de dados estiver pronto, você substituirá este array
  // por uma chamada `fetch` para a sua API, que retornará os dados no mesmo formato.
  const mockCampaigns = [
    {
      year: 2025,
      imageSrc: "../../imagens/campanhaCastracao2025.png",
      imageAlt: "Campanha de Castração 2025",
      status: "ongoing",
      link: "detalhes-castracao.html", // Link para a página de detalhes
    },
    {
      year: 2024,
      imageSrc: "../../imagens/campanhaAntirrabica2024.png",
      imageAlt: "Campanha Antirrábica 2024",
      status: "closed",
      link: "#", // Link não funcional para campanhas encerradas
    },
  ];

  const campaignsContainer = document.getElementById("campaigns-list");

  if (campaignsContainer) {
    // Limpa o container caso haja algum conteúdo residual (boa prática)
    campaignsContainer.innerHTML = "";

    // Itera sobre cada campanha e cria o HTML correspondente
    mockCampaigns.forEach((campaign) => {
      const campaignItem = document.createElement("div");
      campaignItem.className = "campaign-item";

      // Cria e anexa o ano da campanha
      const yearSpan = document.createElement("span");
      yearSpan.className = "campaign-year";
      yearSpan.textContent = campaign.year;
      campaignItem.appendChild(yearSpan);

      // Cria o card com a imagem
      const cardDiv = document.createElement("div");
      cardDiv.className = "card";
      const img = document.createElement("img");
      img.src = campaign.imageSrc;
      img.alt = campaign.imageAlt;
      cardDiv.appendChild(img);
      campaignItem.appendChild(cardDiv);

      // Cria o link de status
      const statusLink = document.createElement("a");
      statusLink.href = campaign.link;
      const statusClass =
        campaign.status === "ongoing" ? "status-ongoing" : "status-closed";
      const statusText =
        campaign.status === "ongoing" ? "Em andamento" : "Encerrada";
      statusLink.className = `campaign-status ${statusClass}`;
      statusLink.textContent = statusText;
      campaignItem.appendChild(statusLink);

      // Adiciona o item de campanha recém-criado ao contêiner na página
      campaignsContainer.appendChild(campaignItem);
    });
  }
});
</file>

<file path="Usuario/JS/paginaInicial.js">
let index = 0;
let interval;

const carousel = document.querySelector(".carousel");
const slides = document.querySelector(".slides");
const totalSlides = document.querySelectorAll(".slides img").length;
const dotsContainer = document.querySelector(".dots");

for (let i = 0; i < totalSlides; i++) {
  const dot = document.createElement("span");
  dot.addEventListener("click", () => {
    index = i;
    updateCarousel();
  });
  dotsContainer.appendChild(dot);
}

const dots = document.querySelectorAll(".dots span");

// Controle do Carrossel
function updateCarousel() {
  // Move o contêiner de slides para a esquerda
  slides.style.transform = `translateX(-${index * 100}%)`;

  // Atualiza a bolinha ativa
  dots.forEach((dot) => dot.classList.remove("active"));
  dots[index].classList.add("active");
}

function nextSlide() {
  index = (index + 1) % totalSlides;
  updateCarousel();
}

function prevSlide() {
  index = (index - 1 + totalSlides) % totalSlides;
  updateCarousel();
}

// Passagem automática
function startAutoPlay() {
  interval = setInterval(nextSlide, 5000);
}

function stopAutoPlay() {
  clearInterval(interval);
}

document.querySelector(".next").addEventListener("click", nextSlide);
document.querySelector(".prev").addEventListener("click", prevSlide);

// Para a passagem automática quando o usuário coloca o mouse no carrossel
carousel.addEventListener("mouseenter", stopAutoPlay);
carousel.addEventListener("mouseleave", startAutoPlay);

updateCarousel(); // Garante que o estado inicial (primeiro slide e dot) esteja correto
startAutoPlay();

// Lógica para o Modal de Mantimentos

const openModalLink = document.getElementById("open-mantimentos-modal");
const mantimentosModal = document.getElementById("mantimentos-modal");

// Garante que o modal e o link existem antes de adicionar os eventos
if (openModalLink && mantimentosModal) {
  const closeModalButton = mantimentosModal.querySelector(".modal-close");

  // Função para abrir o modal
  openModalLink.addEventListener("click", function (event) {
    event.preventDefault(); // Impede que o link '#' navegue para o topo da página
    mantimentosModal.style.display = "flex";
  });

  // Função para fechar o modal pelo botão 'X'
  closeModalButton.addEventListener("click", function () {
    mantimentosModal.style.display = "none";
  });

  // Função para fechar o modal clicando fora dele (no overlay)
  mantimentosModal.addEventListener("click", function (event) {
    if (event.target === mantimentosModal) {
      mantimentosModal.style.display = "none";
    }
  });
}
</file>

<file path="Usuario/JS/trabalhos.js">
document.addEventListener("DOMContentLoaded", function () {
  // No futuro, estes dados virão de uma API/banco de dados.
  // Por enquanto, usamos um array de objetos para simular.
  const mockNews = [
    {
      link: "#", // Link para a notícia completa
      imageSrc: "../../imagens/foto1.jpeg",
      imageAlt: "Pessoas limpando uma praça",
      date: "15 de Julho, 2024",
      title: "Mutirão de limpeza e conscientização no bairro central",
      summary: "Voluntários se reuniram no último sábado para um grande mutirão de limpeza na praça principal, removendo lixo e conscientizando a população sobre o descarte correto.",
    },
    {
      link: "#",
      imageSrc: "../../imagens/foto2.jpeg",
      imageAlt: "Cachorro sendo adotado em uma feira",
      date: "02 de Julho, 2024",
      title: "Feira de adoção responsável encontra lar para 15 animais",
      summary: "A feira de adoção realizada em parceria com a prefeitura foi um sucesso, com 10 cães e 5 gatos encontrando novas famílias amorosas.",
    },
  ];

  const newsContainer = document.getElementById("news-list");

  if (newsContainer) {
    newsContainer.innerHTML = ""; // Limpa o container

    mockNews.forEach((newsItem) => {
      const newsCard = document.createElement("a");
      newsCard.href = newsItem.link;
      newsCard.className = "news-card";

      // Cria e anexa a imagem
      const img = document.createElement("img");
      img.src = newsItem.imageSrc;
      img.alt = newsItem.imageAlt;
      newsCard.appendChild(img);

      // Cria o container para o texto
      const textContentDiv = document.createElement("div");
      textContentDiv.className = "news-text-content";

      // Cria e anexa a data
      const dateSpan = document.createElement("span");
      dateSpan.className = "news-date";
      dateSpan.textContent = newsItem.date;
      textContentDiv.appendChild(dateSpan);

      // Cria e anexa o título
      const titleH3 = document.createElement("h3");
      titleH3.className = "news-title";
      titleH3.textContent = newsItem.title;
      textContentDiv.appendChild(titleH3);

      // Cria e anexa o resumo
      const summaryP = document.createElement("p");
      summaryP.className = "news-summary";
      summaryP.textContent = newsItem.summary;
      textContentDiv.appendChild(summaryP);

      // Anexa o container de texto ao card principal
      newsCard.appendChild(textContentDiv);

      newsContainer.appendChild(newsCard);
    });
  }
});
</file>

<file path="Usuario/JSON/adocao.json">
[
  {
    "id": 1,
    "name": "Biju",
    "age": "2 anos",
    "size": "Médio",
    "gender": "female",
    "isVaccinated": true,
    "isNeutered": true,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Dócil e amigável"
  },
  {
    "id": 2,
    "name": "Thor",
    "age": "1 ano",
    "size": "Grande",
    "gender": "male",
    "isVaccinated": true,
    "isNeutered": false,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Brincalhão e ativo"
  },
  {
    "id": 3,
    "name": "Luna",
    "age": "3 anos",
    "size": "Pequeno",
    "gender": "female",
    "isVaccinated": false,
    "isNeutered": true,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Calma e carinhosa"
  },
  {
    "id": 4,
    "name": "Max",
    "age": "5 meses",
    "size": "Pequeno",
    "gender": "male",
    "isVaccinated": false,
    "isNeutered": false,
    "image": "../../imagens/animal-adocao1.webp",
    "temperament": "Curioso e medroso"
  }
]
</file>

<file path="Usuario/JSON/package.json">
{
  "dependencies": {
    "firebase": "^12.1.0"
  }
}
</file>

<file path="ADM/HTML/campanhas-adm.html">
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página de Campanhas</title>
    <link rel="stylesheet" href="../CSS/paginaInicial-adm.css" />
    <link rel="stylesheet" href="../CSS/campanhas-adm.css" />
    <!-- Ícones do google -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
  </head>

  <body>
    <header>
      <div class="top-bar-main">
        <img src="../../imagens/logo.png" alt="Logo" />

        <!-- Botão de Editar -->
        <button class="edit-button" id="open-edit-modal">
          <span>Editar</span>
        </button>
      </div>
      <div class="top-bar-secondary"></div>
    </header>

    <div class="summary-text">
      <a href="paginaInicial-adm.html" class="back"><span class="material-symbols-outlined">arrow_circle_left</span></a>
      <h1 class="summary-title">Campanhas de vacinação e castração</h1>
      <p class="summary-subtitle">Acompanhe as informações acerca das  campanhas voltadas à causa animal realizadas pela prefeitura de Santa Rita do Sapucaí.</p>
    </div>

    <!-- Este contêiner será preenchido dinamicamente pelo JavaScript -->
    <section class="campaigns" id="campaigns-list">
      <!-- O conteúdo das campanhas será inserido aqui -->
    </section>

    <!-- Modal de Edição -->
    <div id="edit-modal" class="modal-overlay">
      <div class="modal-content large">
        <span class="modal-close" id="close-edit-modal">&times;</span>
        <h2>Editar Página de Campanhas</h2>
        <p>Altere o título, a descrição e gerencie as campanhas da página.</p>

        <form id="edit-form">
          <fieldset>
            <legend>Conteúdo Principal</legend>
            <div class="form-group">
              <label for="edit-title">Título da Página:</label>
              <input type="text" id="edit-title" name="edit-title" required />
            </div>
            <div class="form-group">
              <label for="edit-subtitle">Subtítulo da Página:</label>
              <textarea id="edit-subtitle" name="edit-subtitle" rows="3" required></textarea>
            </div>
          </fieldset>

          <fieldset>
            <legend>Gerenciar Campanhas</legend>
            <div id="campaigns-edit-list">
              <!-- Formulários de campanha serão inseridos aqui pelo JS -->
            </div>
            <button
              type="button"
              id="add-campaign-btn"
              class="form-button-secondary"
            >
              + Adicionar Nova Campanha
            </button>
          </fieldset>

          <div class="form-actions">
            <button type="submit">Salvar Alterações</button>
            <button type="button" id="cancel-edit">Cancelar</button>
          </div>
        </form>
      </div>
    </div>

    <script type="module" src="../JS/firebase-adm.js"></script>
    <script type="module" src="../JS/campanhas-adm.js"></script>
  </body>
</html>
</file>

<file path="ADM/HTML/trabalhos-adm.html">
<!DOCTYPE html>
<html lang="pt-BR">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Página de trabalhos realizados</title>
        <link rel="stylesheet" href="../CSS/paginaInicial-adm.css" />
        <link rel="stylesheet" href="../CSS/trabalhos-adm.css" />
        <!-- Ícones do google -->
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    </head>

    <body>
        <header>
            <div class="top-bar-main">
                <img src="../../imagens/logo.png" alt="Logo" />

                <!-- Botão de Editar -->
                <button class="edit-button" id="open-edit-modal">
                    <span>Editar</span>
                </button>
            </div>
            <div class="top-bar-secondary"></div>
            </header>

            <div class="summary-text">
            <a href="paginaInicial-adm.html" class="back"><span class="material-symbols-outlined">arrow_circle_left</span></a>
            <h1 class="summary-title">Trabalhos realizados</h1>
            <p class="summary-subtitle">A atuação da associação vai muito além! Confira nossas ações!</p>
            </div>

        <!-- O container abaixo será preenchido dinamicamente pelo JavaScript -->
        <main class="news-card-container" id="news-list">
            <!-- Os cards de notícia serão inseridos aqui -->
        </main>

        <!-- Modal de Edição -->
        <div id="edit-modal" class="modal-overlay">
            <div class="modal-content large">
                <span class="modal-close" id="close-edit-modal">&times;</span>
                <h2>Editar Página de Trabalhos Realizados</h2>
                <p>Altere o título, a descrição e gerencie as notícias da página.</p>

                <form id="edit-form">
                    <fieldset>
                        <legend>Conteúdo Principal</legend>
                        <div class="form-group">
                            <label for="edit-title">Título da Página:</label>
                            <input type="text" id="edit-title" name="edit-title" required />
                        </div>
                        <div class="form-group">
                            <label for="edit-subtitle">Subtítulo da Página:</label>
                            <textarea id="edit-subtitle" name="edit-subtitle" rows="2" required></textarea>
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend>Gerenciar Notícias</legend>
                        <div id="news-edit-list">
                            <!-- Formulários de notícia serão inseridos aqui pelo JS -->
                        </div>
                        <button
                            type="button"
                            id="add-news-btn"
                            class="form-button-secondary"
                        >+ Adicionar Nova Notícia</button>
                    </fieldset>

                    <div class="form-actions">
                        <button type="submit">Salvar Alterações</button>
                        <button type="button" id="cancel-edit">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>

        <script type="module" src="../JS/firebase-adm.js"></script>
        <script type="module" src="../JS/trabalhos-adm.js"></script>
    </body>
</html>
</file>

<file path="Usuario/CSS/login.css">
/* ===== fundo com pegadas ===== */
.login-bg {
  margin: 0;
  font-family: Arial, sans-serif;
  color: #222;
  background: #c9e6ea url("../../imagens/pegadas.png") repeat;
}

/* ===== palco do login (card + logo grande) ===== */
.login-stage {
  min-height: calc(100vh - 56px); /* menos a faixa */
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 24px;
  align-items: start;
  padding: 24px clamp(16px, 5vw, 48px);
}
@media (max-width: 900px) {
  .login-stage {
    grid-template-columns: 1fr;
  }
}

/* ===== card ===== */
.login-card {
  background: #f6f7f2;
  border-radius: 12px;
  padding: 24px;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  max-width: 420px;
  width: 100%;
}
.login-card h2 {
  margin: 0 0 6px;
  font-size: 24px;
  font-weight: 700;
}
.login-card .accent {
  color: #0a4a6a;
}
.subtitle {
  margin: 0 0 20px;
  font-size: 13px;
  color: #666;
}

.field {
  display: block;
  margin: 12px 0;
}
.field > span {
  display: block;
  font-size: 14px;
  color: #444;
  margin-bottom: 6px;
}

.input-wrap {
  position: relative;
  display: flex;
  align-items: center;
  border-bottom: 1px solid #bbb;
  padding-right: 36px;
}
.input-wrap input {
  border: none;
  outline: none;
  background: transparent;
  font-size: 16px;
  padding: 10px 0;
  width: 100%;
}
.icon {
  position: absolute;
  right: 0;
}

.btn-eye {
  position: absolute;
  right: 0;
  border: none;
  background: none;
  cursor: pointer;
  font-size: 16px;
  padding: 0 0 2px;
  line-height: 1;
}

.btn-login {
  margin-top: 20px;
  width: 100%;
  padding: 12px 16px;
  background: #b30000;
  color: #fff;
  border: none;
  border-radius: 6px;
  font-weight: 700;
  cursor: pointer;
}
.btn-login:hover {
  filter: brightness(0.95);
}

.error {
  color: #b30000;
  min-height: 18px;
  margin-top: 8px;
}

/* links auxiliares */
.helper-links {
  margin-top: 10px;
}
.helper-links a {
  color: #0a4a6a;
  text-decoration: none;
  font-size: 14px;
}
.helper-links a:hover {
  text-decoration: underline;
}

/* ===== logo redondo à direita ===== */
.login-logo {
  display: flex;
  justify-content: center;
  align-items: center;
}
.login-logo img {
  width: min(420px, 80%);
  max-width: 420px;
  aspect-ratio: 1/1;
  object-fit: contain;
}
</file>

<file path="Usuario/HTML/adocao.html">
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página de Adoção</title>
    <link rel="stylesheet" href="../CSS/paginaInicial.css" />
    <link rel="stylesheet" href="../CSS/adocao.css" />
    <!-- Ícones do google -->
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"
    />
  </head>

  <body>
    <header>
      <div class="top-bar-main">
        <img src="../../imagens/logo.png" alt="Logo" />
      </div>
      <div class="top-bar-secondary"></div>
    </header>

    <div class="summary-text">
      <a href="paginaInicial.html" class="back"
        ><span class="material-symbols-outlined">arrow_circle_left</span></a
      >
      <h1 class="summary-title">Adoção</h1>
      <p class="summary-subtitle">
        Confira os animais disponíveis para adoção!
      </p>
    </div>

    <div class="animals-button-container" id="animal-list"></div>

    <!-- Estrutura do Modal (Pop-up) -->
    <div id="animal-modal" class="modal-overlay">
      <div class="modal-content">
        <span class="modal-close">&times;</span>
        <div class="modal-body">
          <img id="modal-animal-image" src="" alt="Foto do animal" />
          <div class="modal-info">
            <h2 id="modal-animal-name"></h2>
            <p>
              <strong>Gênero:</strong> <span id="modal-animal-gender"></span>
            </p>
            <p><strong>Idade:</strong> <span id="modal-animal-age"></span></p>
            <p><strong>Porte:</strong> <span id="modal-animal-size"></span></p>
            <p>
              <strong>Castrado:</strong>
              <span id="modal-animal-neutered"></span>
            </p>
            <p>
              <strong>Vacinado:</strong>
              <span id="modal-animal-vaccinated"></span>
            </p>
            <p>
              <strong>Temperamento:</strong>
              <span id="modal-animal-temperament"></span>
            </p>
          </div>
        </div>
        <p class="modal-contact">
          <strong
            >Entre em contato pelo telefone (35) 99999-8888 e agende uma
            visita!</strong
          >
        </p>
      </div>
    </div>

    <script src="../JS/adocao.js"></script>
  </body>
</html>
</file>

<file path="Usuario/HTML/paginaInicial.html">
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página Principal</title>
    <link rel="stylesheet" href="../CSS/paginaInicial.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <script defer src="../JS/paginaInicial.js"></script>
  </head>

  <body>
    <!-- Faixa do título; deixar igual para todas as páginas -->
    <header>
      <div class="top-bar-main">
        <img src="../../imagens/logo.png" alt="Logo" />

        <!-- Ícone de usuário -->
        <a href="login.html" class="user-icon"><span class="material-symbols-outlined">account_circle</span></a>
      </div>
      <div class="top-bar-secondary"></div>
    </header>

    <!-- Carrossel -->
    <div class="carousel">
      <div class="slides">
        <img src="../../imagens/foto1.jpeg" alt="Foto 1" />
        <img src="../../imagens/foto2.jpeg" alt="Foto 2" />
        <img src="../../imagens/foto3.jpeg" alt="Foto 3" />
        <img src="../../imagens/foto4.jpeg" alt="Foto 4" />
        <img src="../../imagens/foto5.jpeg" alt="Foto 5" />
      </div>
      <!-- Controles -->
      <button class="prev">&#10094;</button>
      <button class="next">&#10095;</button>
      <div class="dots"></div>
    </div>

    <!-- Botões largos -->
    <!-- TODOS OS TEXTOS E IMAGENS DEVEM VIR DO BD (APENAS EXEMPLIFICADO ATÉ O MOMENTO) -->
    <div class="button-container">
      <a href="adocao.html">
        <img src="../../imagens/iconeAdocao.png" alt="Ícone de Adoção" />
        <div class="button-text-container">
          <span class="button-title">Adote um animal</span>
          <span class="button-subtitle">Confira os animais disponíveis para adoção!</span>
        </div>
      </a>
      <a href="https://docs.google.com/forms/d/e/1FAIpQLSc_Z0ExslhkTjMBFYVTPJA4qE6mhJFM81SiVlRYQChkkFyHfA/viewform?usp=header" target="_blank" rel="noopener noreferrer">
        <img src="../../imagens/iconeDenuncias.png" alt="Ícone de Denuncias" />
        <div class="button-text-container">
          <span class="button-title">Canal de Denúncias</span>
          <span class="button-subtitle"
            >Denuncie situações de maus tratos e abandono!</span
          >
        </div>
      </a>
      <a href="campanhas.html">
        <img src="../../imagens/iconeCampanhas.png" alt="Ícone de Campanhas" />
        <div class="button-text-container">
          <span class="button-title">Campanhas de vacinação e castração</span>
          <span class="button-subtitle">Confira as datas das próximas campanhas!</span>
        </div>
      </a>
      <a href="trabalhos.html">
        <img src="../../imagens/iconeTrabalhos.png" alt="Ícone de Trabalhos Realizados" />
        <div class="button-text-container">
          <span class="button-title">Trabalhos Realizados</span>
          <span class="button-subtitle">Acompanhe os trabalhos realizados pela Associação!</span>
        </div>
      </a>
      <a href="https://docs.google.com/forms/d/e/1FAIpQLSfM2Ccj5_VD3u4FiVVbSRytle4OwPLAvtLNHD4TqkPz2Q5k8w/viewform?usp=header" target="_blank" rel="noopener noreferrer">
        <img src="../../imagens/iconeVoluntarios.png" alt="Ícone de Voluntário" />
        <div class="button-text-container">
          <span class="button-title">Seja um voluntário</span>
        </div>
      </a>
    </div>

    <footer>
      <div class="footer-container">
        <div class="footer-column footer-donations">
          <h4>Seja um colaborador!</h4>
          <div class="donation-content">
            <img src="../../imagens/qr-code.png" alt="QR Code para doação PIX" />
            <div class="donation-text">
              <p>
                Para auxilio financeiro, escaneie o QR Code ao lado ou envie um pix para o CNPJ 06.332.442/0001-11.
              </p>
              <p>
                Para doação de mantimentos, confira a lista dos itens necessários <a href="#" id="open-mantimentos-modal" style="color: blue; text-decoration: underline;">clicando aqui</a>.
              </p>
            </div>
          </div>
        </div>

        <div class="footer-column footer-contact">
          <h4>Informações de contato</h4>
          <p><strong>Apoio animal:</strong> (35) 99999-9999</p>
          <div class="social-icons">
            <div class="social-item">
              <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Facebook</title><path d="M22.675 0H1.325C.593 0 0 .593 0 1.325v21.351C0 23.407.593 24 1.325 24H12.82v-9.294H9.692v-3.622h3.128V8.413c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12V24h6.116c.732 0 1.325-.593 1.325-1.325V1.325C24 .593 23.407 0 22.675 0z"/></svg>
              <span>Sociedade Protetora dos Animais de SRS - MG</span>
            </div>
            <div class="social-item">
              <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Instagram</title><path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.765.297 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.297-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.148-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.314.935 20.644.523 19.86.227c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.056 1.17-.249 1.805-.413 2.227-.217.562-.477.96-.896 1.381-.42.419-.819.679-1.381.896-.422.164-1.057.36-2.227.413-1.266.057-1.646.07-4.85.07s-3.585-.015-4.85-.074c-1.17-.056-1.805-.249-2.227-.413-.562-.217-.96-.477-1.381-.896-.419-.42-.679-.819-.896-1.381-.165-.422-.36-1.057-.413-2.227-.055-1.266-.07-1.646-.07-4.85s.015-3.585.07-4.85c.055-1.17.249-1.805.413-2.227.217-.562.477.96.896-1.381.42-.419.819.679 1.381-.896.422-.165 1.057.36 2.227.413C8.415 2.175 8.797 2.16 12 2.16zm0 5.48c-2.49 0-4.5 2.01-4.5 4.5s2.01 4.5 4.5 4.5 4.5-2.01 4.5-4.5-2.01-4.5-4.5-4.5zm0 7.16c-1.473 0-2.66-1.187-2.66-2.66s1.187-2.66 2.66-2.66 2.66 1.187 2.66 2.66-1.187 2.66-2.66 2.66zm6.336-7.74c-.777 0-1.406.63-1.406 1.406s.63 1.406 1.406 1.406 1.406-.63 1.406-1.406c0-.777-.63-1.406-1.406-1.406z"/></svg>
              <span>@spasrsmg</span>
            </div>
          </div>
        </div>

        <div class="footer-column footer-logo">
          <img src="../../imagens/logoONG.png" alt="Logo ONG" />
        </div>
      </div>
    </footer>

    <!-- Estrutura do Modal de Mantimentos -->
    <div id="mantimentos-modal" class="modal-overlay">
      <div class="modal-content">
        <span class="modal-close">&times;</span>
        <h2>Itens para Doação</h2>
        <p>Agradecemos seu interesse em doar! A associação é mantida por meio de doações da comunidade e, por isso, seu apoio é de extrema importância para a causa. Precisamos principalmente dos seguintes itens:</p>
        <ul>
          <li>Ração para cães e gatos (filhotes e adultos)</li>
          <li>Areia higiênica para gatos</li>
          <li>Vermífugos e antipulgas</li>
          <li>Materiais de limpeza (água sanitária, desinfetante)</li>
          <li>Jornais velhos e cobertores</li>
          <li>Brinquedos</li>
          <li>Vasilhas de água e comida</li>
        </ul>
        <p><strong>As doações podem ser entregues em nossa sede.</strong></p>
      </div>
    </div>
  </body>
</html>
</file>

<file path="ADM/HTML/adocao-adm.html">
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página de Adoção</title>
    <link rel="stylesheet" href="../CSS/paginaInicial-adm.css" />
    <link rel="stylesheet" href="../CSS/adocao-adm.css" />
    <!-- Ícones do google -->
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"
    />
  </head>

  <body>
    <header>
      <div class="top-bar-main">
        <img src="../../imagens/logo.png" alt="Logo" />

        <!-- Botão de Editar -->
        <button class="edit-button" id="open-edit-modal">
          <span>Editar</span>
        </button>
      </div>
      <div class="top-bar-secondary"></div>
    </header>

    <div class="summary-text">
      <a href="paginaInicial-adm.html" class="back"
        ><span class="material-symbols-outlined">arrow_circle_left</span></a
      >
      <h1 class="summary-title">Adoção</h1>
      <p class="summary-subtitle">
        Confira os animais disponíveis para adoção!
      </p>
    </div>

    <div class="animals-button-container" id="animal-list"></div>

    <!-- Estrutura do Modal (Pop-up) -->
    <div id="animal-modal" class="modal-overlay">
      <div class="modal-content">
        <span class="modal-close">&times;</span>
        <div class="modal-body">
          <img id="modal-animal-image" src="" alt="Foto do animal" />
          <div class="modal-info">
            <h2 id="modal-animal-name"></h2>
            <p>
              <strong>Gênero:</strong> <span id="modal-animal-gender"></span>
            </p>
            <p><strong>Idade:</strong> <span id="modal-animal-age"></span></p>
            <p><strong>Porte:</strong> <span id="modal-animal-size"></span></p>
            <p>
              <strong>Castrado:</strong>
              <span id="modal-animal-neutered"></span>
            </p>
            <p>
              <strong>Vacinado:</strong>
              <span id="modal-animal-vaccinated"></span>
            </p>
            <p>
              <strong>Temperamento:</strong>
              <span id="modal-animal-temperament"></span>
            </p>
          </div>
        </div>
        <p class="modal-contact">
          <strong
            >Entre em contato pelo telefone (35) 99999-8888 e agende uma
            visita!</strong
          >
        </p>
      </div>
    </div>

    <!-- Modal de Edição -->
    <div id="edit-modal" class="modal-overlay">
      <div class="modal-content large">
        <span class="modal-close" id="close-edit-modal">&times;</span>
        <h2>Editar Página de Adoção</h2>
        <p>Altere o título, a descrição e gerencie os animais da página.</p>

        <form id="edit-form">
          <fieldset>
            <legend>Conteúdo Principal</legend>
            <div class="form-group">
              <label for="edit-title">Título da Página:</label>
              <input type="text" id="edit-title" name="edit-title" required />
            </div>
            <div class="form-group">
              <label for="edit-subtitle">Subtítulo da Página:</label>
              <textarea id="edit-subtitle" name="edit-subtitle" rows="2" required></textarea>
            </div>
          </fieldset>

          <fieldset>
            <legend>Gerenciar Animais</legend>
            <div id="animals-edit-list">
              <!-- Formulários de animais serão inseridos aqui pelo JS -->
            </div>
            <button
              type="button"
              id="add-animal-btn"
              class="form-button-secondary"
            >+ Adicionar Novo Animal</button>
          </fieldset>

          <div class="form-actions">
            <button type="submit">Salvar Alterações</button>
            <button type="button" id="cancel-edit">Cancelar</button>
          </div>
        </form>
      </div>
    </div>

    <script type="module" src="../JS/firebase-adm.js"></script>
    <script type="module" src="../JS/adocao-adm.js"></script>
  </body>
</html>
</file>

<file path="ADM/JS/campanhas-adm.js">
import {
  db,
  doc,
  getDoc,
  setDoc,
  collection,
  getDocs,
  addDoc,
  deleteDoc,
} from "./firebase-adm.js";

document.addEventListener("DOMContentLoaded", function () {
  let loadedCampaigns = []; // Armazena as campanhas carregadas

  const campaignsContainer = document.getElementById("campaigns-list");

  /**
   * Converts a file to a Base64 encoded string.
   * @param {File} file The file to convert.
   * @returns {Promise<string>} A promise that resolves with the Base64 string.
   */
  function fileToBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result);
      reader.onerror = (error) => reject(error);
    });
  }

  /**
   * Renderiza a lista de campanhas na página principal.
   * @param {Array} campaigns - Array de objetos de campanha.
   */
  function renderCampaigns(campaigns) {
    if (!campaignsContainer) return;

    campaignsContainer.innerHTML = ""; // Limpa o container

    // Ordena por ano, do mais novo para o mais antigo
    const sortedCampaigns = [...campaigns].sort(
      (a, b) => (b.year || 0) - (a.year || 0)
    );

    sortedCampaigns.forEach((campaign) => {
      const campaignItem = document.createElement("div");
      campaignItem.className = "campaign-item";

      const yearSpan = document.createElement("span");
      yearSpan.className = "campaign-year";
      yearSpan.textContent = campaign.year;
      campaignItem.appendChild(yearSpan);

      const cardDiv = document.createElement("div");
      cardDiv.className = "card";
      const img = document.createElement("img");
      img.src = campaign.imageSrc;
      img.alt = campaign.imageAlt;
      cardDiv.appendChild(img);
      campaignItem.appendChild(cardDiv);

      const statusLink = document.createElement("a");
      statusLink.href = campaign.link || "#";
      const isOngoing = campaign.status === "ongoing";
      const statusClass = isOngoing ? "status-ongoing" : "status-closed";
      const statusText = isOngoing ? "Em andamento" : "Encerrada";
      statusLink.className = `campaign-status ${statusClass}`;
      statusLink.textContent = statusText;
      if (!isOngoing) {
        statusLink.onclick = (e) => e.preventDefault();
      }
      campaignItem.appendChild(statusLink);

      campaignsContainer.appendChild(campaignItem);
    });
  }

  /**
   * Carrega as campanhas do Firestore.
   */
  async function loadCampaigns() {
    try {
      const campaignsCollectionRef = collection(
        db,
        "pages",
        "campanhas",
        "items"
      );
      const querySnapshot = await getDocs(campaignsCollectionRef);

      if (querySnapshot.empty) {
        console.log("Nenhuma campanha encontrada no banco de dados.");
        loadedCampaigns = [];
        renderCampaigns([]); // Limpa a tela se não houver campanhas
        return;
      }

      loadedCampaigns = [];
      querySnapshot.forEach((doc) => {
        loadedCampaigns.push({ id: doc.id, ...doc.data() });
      });
      renderCampaigns(loadedCampaigns);
    } catch (error) {
      console.error("Erro ao carregar campanhas:", error);
      if (campaignsContainer) {
        campaignsContainer.innerHTML = "<p>Erro ao carregar campanhas.</p>";
      }
    }
  }

  // --- Lógica para o Modal de Edição ---
  const openEditModalBtn = document.getElementById("open-edit-modal");
  const editModal = document.getElementById("edit-modal");
  const pageContentRef = doc(db, "pages", "campanhas");

  async function loadPageContent() {
    try {
      const docSnap = await getDoc(pageContentRef);
      if (docSnap.exists()) {
        const data = docSnap.data();
        document.querySelector(".summary-title").textContent =
          data.title || "Campanhas de vacinação e castração";
        document.querySelector(".summary-subtitle").textContent =
          data.subtitle ||
          "Acompanhe as informações acerca das  campanhas voltadas à causa animal realizadas pela prefeitura de Santa Rita do Sapucaí.";
      } else {
        console.log(
          "Documento de conteúdo da página não encontrado, usando valores padrão."
        );
      }
    } catch (error) {
      console.error("Erro ao carregar conteúdo da página:", error);
    }
  }

  /**
   * Cria o formulário de edição para uma campanha individual.
   * @param {object} campaign - O objeto da campanha. Se vazio, cria um formulário para uma nova.
   * @returns {HTMLElement} - O elemento do formulário.
   */
  function createCampaignEditForm(campaign = {}) {
    const formId = campaign.id || `new-${Date.now()}`;
    const container = document.createElement("div");
    container.className = "form-section";
    container.dataset.campaignId = formId;

    const isOngoing = campaign.status === "ongoing";

    container.innerHTML = `
      <button type="button" class="remove-item-btn">Remover</button>
      <h4>Campanha ${campaign.year || "(Nova)"}</h4>
      <div class="form-group">
        <label for="campaign-year-${formId}">Ano:</label>
        <input type="number" id="campaign-year-${formId}" class="campaign-year-input" value="${
      campaign.year || new Date().getFullYear()
    }" required>
      </div>
      <div class="form-group">
        <label>Imagem do Poster:</label>
        <div class="image-upload-container">
          <img src="${
            campaign.imageSrc || ""
          }" alt="Pré-visualização" class="image-preview" id="campaign-img-preview-${formId}">
          <input type="file" id="campaign-img-${formId}" class="campaign-img-input" accept="image/*">
        </div>
      </div>
      <div class="form-group form-group-checkbox">
        <input type="checkbox" id="campaign-status-${formId}" class="campaign-status-input" ${
      isOngoing ? "checked" : ""
    }>
        <label for="campaign-status-${formId}">Em andamento</label>
      </div>
      <div class="form-group campaign-link-group" style="display: ${
        isOngoing ? "block" : "none"
      };">
        <label for="campaign-link-${formId}">Link de Inscrição (se aplicável):</label>
        <input type="text" id="campaign-link-${formId}" class="campaign-link-input" value="${
      campaign.link || ""
    }">
      </div>
    `;

    // Event listener para o checkbox de status
    const statusCheckbox = container.querySelector(".campaign-status-input");
    const linkGroup = container.querySelector(".campaign-link-group");
    statusCheckbox.addEventListener("change", () => {
      linkGroup.style.display = statusCheckbox.checked ? "block" : "none";
    });

    // Event listener para o botão de remover
    container
      .querySelector(".remove-item-btn")
      .addEventListener("click", () => {
        if (
          confirm(
            "Tem certeza que deseja remover esta campanha? A remoção será permanente ao salvar."
          )
        ) {
          container.dataset.deleted = "true";
          container.style.display = "none"; // Apenas esconde, a remoção real acontece ao salvar.
        }
      });

    // Event listener para a pré-visualização da imagem
    const fileInput = container.querySelector(".campaign-img-input");
    const preview = container.querySelector(".image-preview");
    fileInput.addEventListener("change", () => {
      const file = fileInput.files[0];
      if (file) {
        preview.src = URL.createObjectURL(file);
      }
    });

    return container;
  }

  if (openEditModalBtn && editModal) {
    const closeEditModalBtn = document.getElementById("close-edit-modal");
    const cancelEditBtn = document.getElementById("cancel-edit");
    const editForm = document.getElementById("edit-form");
    const campaignsEditList = document.getElementById("campaigns-edit-list");
    const addCampaignBtn = document.getElementById("add-campaign-btn");

    function populateEditForm() {
      // Popula título e subtítulo
      const currentTitle = document.querySelector(".summary-title").textContent;
      const currentSubtitle =
        document.querySelector(".summary-subtitle").textContent;
      document.getElementById("edit-title").value = currentTitle.trim();
      document.getElementById("edit-subtitle").value = currentSubtitle.trim();

      // Popula a lista de campanhas para edição
      campaignsEditList.innerHTML = "";
      const sortedCampaigns = [...loadedCampaigns].sort(
        (a, b) => b.year - a.year
      );
      sortedCampaigns.forEach((campaign) => {
        const formElement = createCampaignEditForm(campaign);
        campaignsEditList.appendChild(formElement);
      });
    }

    addCampaignBtn.addEventListener("click", () => {
      const newForm = createCampaignEditForm();
      campaignsEditList.prepend(newForm); // Adiciona no topo
    });

    async function saveChanges(event) {
      event.preventDefault();
      const submitButton = editForm.querySelector('button[type="submit"]');
      submitButton.disabled = true;
      submitButton.textContent = "Salvando...";

      try {
        // 1. Salvar título e subtítulo da página
        const newTitle = document.getElementById("edit-title").value;
        const newSubtitle = document.getElementById("edit-subtitle").value;
        await setDoc(pageContentRef, {
          title: newTitle,
          subtitle: newSubtitle,
        });

        // 2. Processar cada formulário de campanha
        const campaignForms =
          campaignsEditList.querySelectorAll(".form-section");
        const promises = [];

        for (const form of campaignForms) {
          const campaignId = form.dataset.campaignId;
          const isNew = campaignId.startsWith("new-");

          // Se marcado para deletar
          if (form.dataset.deleted === "true") {
            if (!isNew) {
              promises.push(
                deleteDoc(doc(db, "pages", "campanhas", "items", campaignId))
              );
            }
            continue; // Pula para o próximo
          }

          // Coleta os dados do formulário
          const year = form.querySelector(".campaign-year-input").value;
          const status = form.querySelector(".campaign-status-input").checked
            ? "ongoing"
            : "closed";
          const link = form.querySelector(".campaign-link-input").value;
          const imageInput = form.querySelector(".campaign-img-input");
          const imagePreview = form.querySelector(".image-preview");

          const campaignData = {
            year: Number(year),
            status: status,
            link: status === "ongoing" ? link : "#",
            imageAlt: `Campanha de ${year}`,
            imageSrc: imagePreview.src, // URL existente ou de um blob local
          };

          // Processo de salvar (conversão de imagem e escrita no DB)
          const saveProcess = async () => {
            // Se uma nova imagem foi selecionada, converte para Base64
            if (imageInput.files[0]) {
              const file = imageInput.files[0];
              campaignData.imageSrc = await fileToBase64(file);
            }

            // Salva no Firestore
            if (isNew) {
              await addDoc(
                collection(db, "pages", "campanhas", "items"),
                campaignData
              );
            } else {
              await setDoc(
                doc(db, "pages", "campanhas", "items", campaignId),
                campaignData
              );
            }
          };

          promises.push(saveProcess());
        }

        await Promise.all(promises);

        // 3. Atualizar UI e fechar modal
        await loadPageContent();
        await loadCampaigns();
        alert("Alterações salvas com sucesso!");
        editModal.style.display = "none";
      } catch (error) {
        console.error("Erro ao salvar alterações: ", error);
        alert(
          "Falha ao salvar as alterações. Verifique o console para mais detalhes."
        );
      } finally {
        submitButton.disabled = false;
        submitButton.textContent = "Salvar Alterações";
      }
    }

    openEditModalBtn.addEventListener("click", () => {
      populateEditForm();
      editModal.style.display = "flex";
    });

    closeEditModalBtn.addEventListener("click", () => {
      editModal.style.display = "none";
    });

    cancelEditBtn.addEventListener("click", () => {
      editModal.style.display = "none";
    });

    editModal.addEventListener("click", (event) => {
      if (event.target === editModal) {
        editModal.style.display = "none";
      }
    });

    editForm.addEventListener("submit", saveChanges);
  }

  // Carrega os dados iniciais da página
  loadPageContent();
  loadCampaigns();
});
</file>

<file path="ADM/JS/firebase-adm.js">
// firebase.js
import { initializeApp } from "https://www.gstatic.com/firebasejs/12.1.0/firebase-app.js";
import {
  getFirestore,
  doc,
  getDoc,
  setDoc,
  collection,
  getDocs,
  addDoc,
  updateDoc,
  deleteDoc,
} from "https://www.gstatic.com/firebasejs/12.1.0/firebase-firestore.js";

const firebaseConfig = {
  apiKey: "AIzaSyAE34wFaTK91aYLe8ar4V6DvGcEXyxyG3s",
  authDomain: "street-to-sweet-7f126.firebaseapp.com",
  projectId: "street-to-sweet-7f126",
  storageBucket: "street-to-sweet-7f126.firebasestorage.app",
  messagingSenderId: "879182530266",
  appId: "1:879182530266:web:08e5fd3ec431a5c77c87e3",
  measurementId: "G-9D3VNC4QE4",
};

// Inicializar Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Exporta a conexão e as funções para serem usadas em outros scripts
// Firebase Storage foi removido.
export {
  db,
  doc,
  getDoc,
  setDoc,
  collection,
  getDocs,
  addDoc,
  updateDoc,
  deleteDoc,
};
</file>

<file path="ADM/JS/trabalhos-adm.js">
import {
  db,
  doc,
  getDoc,
  setDoc,
  collection,
  getDocs,
  addDoc,
  deleteDoc,
} from "./firebase-adm.js";

document.addEventListener("DOMContentLoaded", function () {
  let loadedNews = []; // Armazena as notícias carregadas
  const newsContainer = document.getElementById("news-list");

  /**
   * Converts a file to a Base64 encoded string.
   * @param {File} file The file to convert.
   * @returns {Promise<string>} A promise that resolves with the Base64 string.
   */
  function fileToBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result);
      reader.onerror = (error) => reject(error);
    });
  }

  /**
   * Renderiza a lista de notícias na página principal.
   * @param {Array} newsItems - Array de objetos de notícia.
   */
  function renderNews(newsItems) {
    if (!newsContainer) return;
    newsContainer.innerHTML = "";

    // Idealmente, as notícias seriam ordenadas por data, mas como a data é uma string,
    // vamos apenas renderizá-las na ordem que vêm do DB por enquanto.
    newsItems.forEach((newsItem) => {
      const newsCard = document.createElement("a");
      newsCard.href = newsItem.link || "#";
      newsCard.className = "news-card";
      if (newsItem.link && newsItem.link !== "#") {
        newsCard.target = "_blank";
        newsCard.rel = "noopener noreferrer";
      }

      const img = document.createElement("img");
      img.src = newsItem.imageSrc;
      img.alt = newsItem.imageAlt;
      newsCard.appendChild(img);

      const textContentDiv = document.createElement("div");
      textContentDiv.className = "news-text-content";

      const dateSpan = document.createElement("span");
      dateSpan.className = "news-date";
      dateSpan.textContent = newsItem.date;
      textContentDiv.appendChild(dateSpan);

      const titleH3 = document.createElement("h3");
      titleH3.className = "news-title";
      titleH3.textContent = newsItem.title;
      textContentDiv.appendChild(titleH3);

      const summaryP = document.createElement("p");
      summaryP.className = "news-summary";
      summaryP.textContent = newsItem.summary;
      textContentDiv.appendChild(summaryP);

      newsCard.appendChild(textContentDiv);
      newsContainer.appendChild(newsCard);
    });
  }

  /**
   * Carrega as notícias do Firestore.
   */
  async function loadNews() {
    try {
      const newsCollectionRef = collection(db, "pages", "trabalhos", "items");
      const querySnapshot = await getDocs(newsCollectionRef);

      if (querySnapshot.empty) {
        console.log("Nenhuma notícia encontrada no banco de dados.");
        loadedNews = [];
        renderNews([]);
        return;
      }

      loadedNews = [];
      querySnapshot.forEach((doc) => {
        loadedNews.push({ id: doc.id, ...doc.data() });
      });
      renderNews(loadedNews);
    } catch (error) {
      console.error("Erro ao carregar notícias:", error);
      if (newsContainer) {
        newsContainer.innerHTML = "<p>Erro ao carregar notícias.</p>";
      }
    }
  }

  // --- Lógica para o Modal de Edição ---
  const openEditModalBtn = document.getElementById("open-edit-modal");
  const editModal = document.getElementById("edit-modal");
  const pageContentRef = doc(db, "pages", "trabalhos");

  async function loadPageContent() {
    try {
      const docSnap = await getDoc(pageContentRef);
      if (docSnap.exists()) {
        const data = docSnap.data();
        document.querySelector(".summary-title").textContent =
          data.title || "Trabalhos realizados";
        document.querySelector(".summary-subtitle").textContent =
          data.subtitle ||
          "A atuação da associação vai muito além! Confira nossas ações!";
      } else {
        console.log(
          "Documento de conteúdo da página não encontrado, usando valores padrão."
        );
      }
    } catch (error) {
      console.error("Erro ao carregar conteúdo da página:", error);
    }
  }

  /**
   * Cria o formulário de edição para uma notícia individual.
   * @param {object} newsItem - O objeto da notícia. Se vazio, cria um formulário para uma nova.
   * @returns {HTMLElement} - O elemento do formulário.
   */
  function createNewsEditForm(newsItem = {}) {
    const formId = newsItem.id || `new-${Date.now()}`;
    const container = document.createElement("div");
    container.className = "form-section";
    container.dataset.newsId = formId;

    container.innerHTML = `
      <button type="button" class="remove-item-btn">Remover</button>
      <h4>Notícia: ${newsItem.title || "(Nova)"}</h4>
      <div class="form-group">
        <label for="news-title-${formId}">Título:</label>
        <input type="text" id="news-title-${formId}" class="news-title-input" value="${
      newsItem.title || ""
    }" required>
      </div>
      <div class="form-group">
        <label for="news-date-${formId}">Data (ex: 15 de Julho, 2024):</label>
        <input type="text" id="news-date-${formId}" class="news-date-input" value="${
      newsItem.date || ""
    }" required>
      </div>
      <div class="form-group">
        <label for="news-summary-${formId}">Resumo:</label>
        <textarea id="news-summary-${formId}" class="news-summary-input" rows="3" required>${
      newsItem.summary || ""
    }</textarea>
      </div>
      <div class="form-group">
        <label for="news-link-${formId}">Link (opcional):</label>
        <input type="text" id="news-link-${formId}" class="news-link-input" value="${
      newsItem.link || ""
    }">
      </div>
      <div class="form-group">
        <label>Imagem da Notícia:</label>
        <div class="image-upload-container">
          <img src="${
            newsItem.imageSrc || ""
          }" alt="Pré-visualização" class="image-preview" id="news-img-preview-${formId}">
          <input type="file" id="news-img-${formId}" class="news-img-input" accept="image/*">
        </div>
      </div>
    `;

    container
      .querySelector(".remove-item-btn")
      .addEventListener("click", () => {
        if (
          confirm(
            "Tem certeza que deseja remover esta notícia? A remoção será permanente ao salvar."
          )
        ) {
          container.dataset.deleted = "true";
          container.style.display = "none";
        }
      });

    const fileInput = container.querySelector(".news-img-input");
    const preview = container.querySelector(".image-preview");
    fileInput.addEventListener("change", () => {
      const file = fileInput.files[0];
      if (file) {
        preview.src = URL.createObjectURL(file);
      }
    });

    return container;
  }

  if (openEditModalBtn && editModal) {
    const closeEditModalBtn = document.getElementById("close-edit-modal");
    const cancelEditBtn = document.getElementById("cancel-edit");
    const editForm = document.getElementById("edit-form");
    const newsEditList = document.getElementById("news-edit-list");
    const addNewsBtn = document.getElementById("add-news-btn");

    function populateEditForm() {
      const currentTitle = document.querySelector(".summary-title").textContent;
      const currentSubtitle =
        document.querySelector(".summary-subtitle").textContent;
      document.getElementById("edit-title").value = currentTitle.trim();
      document.getElementById("edit-subtitle").value = currentSubtitle.trim();

      newsEditList.innerHTML = "";
      // Idealmente, ordenar por data aqui também
      loadedNews.forEach((newsItem) => {
        const formElement = createNewsEditForm(newsItem);
        newsEditList.appendChild(formElement);
      });
    }

    addNewsBtn.addEventListener("click", () => {
      const newForm = createNewsEditForm();
      newsEditList.prepend(newForm);
    });

    async function saveChanges(event) {
      event.preventDefault();
      const submitButton = editForm.querySelector('button[type="submit"]');
      submitButton.disabled = true;
      submitButton.textContent = "Salvando...";

      try {
        // 1. Salvar título e subtítulo da página
        const newTitle = document.getElementById("edit-title").value;
        const newSubtitle = document.getElementById("edit-subtitle").value;
        await setDoc(pageContentRef, {
          title: newTitle,
          subtitle: newSubtitle,
        });

        // 2. Processar cada formulário de notícia
        const newsForms = newsEditList.querySelectorAll(".form-section");
        const promises = [];

        for (const form of newsForms) {
          const newsId = form.dataset.newsId;
          const isNew = newsId.startsWith("new-");

          if (form.dataset.deleted === "true") {
            if (!isNew) {
              promises.push(
                deleteDoc(doc(db, "pages", "trabalhos", "items", newsId))
              );
            }
            continue;
          }

          const title = form.querySelector(".news-title-input").value;
          const date = form.querySelector(".news-date-input").value;
          const summary = form.querySelector(".news-summary-input").value;
          const link = form.querySelector(".news-link-input").value;
          const imageInput = form.querySelector(".news-img-input");
          const imagePreview = form.querySelector(".image-preview");

          const newsData = {
            title,
            date,
            summary,
            link: link || "#",
            imageAlt: `Imagem da notícia: ${title}`,
            imageSrc: imagePreview.src,
          };

          const saveProcess = async () => {
            if (imageInput.files[0]) {
              const file = imageInput.files[0];
              newsData.imageSrc = await fileToBase64(file);
            }

            if (isNew) {
              await addDoc(
                collection(db, "pages", "trabalhos", "items"),
                newsData
              );
            } else {
              await setDoc(
                doc(db, "pages", "trabalhos", "items", newsId),
                newsData
              );
            }
          };

          promises.push(saveProcess());
        }

        await Promise.all(promises);

        // 3. Atualizar UI e fechar modal
        await loadPageContent();
        await loadNews();
        alert("Alterações salvas com sucesso!");
        editModal.style.display = "none";
      } catch (error) {
        console.error("Erro ao salvar alterações: ", error);
        alert(
          "Falha ao salvar as alterações. Verifique o console para mais detalhes."
        );
      } finally {
        submitButton.disabled = false;
        submitButton.textContent = "Salvar Alterações";
      }
    }

    openEditModalBtn.addEventListener("click", () => {
      populateEditForm();
      editModal.style.display = "flex";
    });

    closeEditModalBtn.addEventListener("click", () => {
      editModal.style.display = "none";
    });

    cancelEditBtn.addEventListener("click", () => {
      editModal.style.display = "none";
    });

    editModal.addEventListener("click", (event) => {
      if (event.target === editModal) {
        editModal.style.display = "none";
      }
    });

    editForm.addEventListener("submit", saveChanges);
  }

  // Carrega os dados iniciais da página
  loadPageContent();
  loadNews();
});
</file>

<file path="Usuario/CSS/paginaInicial.css">
body {
  margin: 0;
  font-family: Arial, sans-serif;
  background-color: #f8f9fa;
}

/* Ícone de usuário (Login) */
.top-bar-main .user-icon {
  position: absolute;
  top: 50%;
  right: 20px;
  transform: translateY(-50%);
  color: white;
  text-decoration: none;
}

.top-bar-main .user-icon .material-symbols-outlined {
  font-size: 40px; /* Tamanho do ícone de usuário */
}

.top-bar-main {
  background-color: #b30000; /* vermelho igual do Figma */
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px 20px;
  position: relative;
}

.top-bar-secondary {
  background-color: #1F7A8C; /* azul igual do Figma */
  height: 10px;
  margin-bottom: 30px;
}

/* Estilo para o botão "Voltar" no cabeçalho */
.top-bar-main .back {
  position: absolute;
  left: 20px;
  top: 50%;
  transform: translateY(-50%);
  color: black;
  text-decoration: none;
  font-size: 16px; /* Tamanho do texto, se houver */
  display: flex; /* Alinha o ícone e o texto na mesma linha */
  align-items: center; /* Centraliza verticalmente o ícone e o texto */
  gap: 5px; /* Espaço entre o ícone e o texto */
}

/* Estilo específico para o ícone de voltar */
.top-bar-main .back .material-symbols-outlined {
  font-size: 28px;
}

/* para os ícones do google */
.material-symbols-outlined {
  font-family: "Material Symbols Outlined";
  font-weight: normal;
  font-style: normal;
  font-size: 24px; /* Tamanho padrão, pode ser sobrescrito como na classe .back */
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-variation-settings:
    "FILL" 0,
    "wght" 400,
    "GRAD" 0,
    "opsz" 24;
}

/* Carrossel */
.carousel {
  width: 50%;
  margin: 0 auto;
  margin-bottom: 50px;
  position: relative;
  overflow: hidden;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}
.slides {
  display: flex;
  transition: transform 0.5s ease-in-out;
}
.slides img {
  width: 100%;
  height: 300px;
  object-fit: cover;
}

/* Botões do carrossel */
.prev,
.next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  font-size: 24px;
  padding: 10px;
  cursor: pointer;
}
.prev {
  left: 10px;
}
.next {
  right: 10px;
}

/* Indicadores */
.dots {
  text-align: center;
  position: absolute;
  bottom: 10px;
  width: 100%;
}
.dots span {
  display: inline-block;
  width: 12px;
  height: 12px;
  background-color: #bbb;
  border-radius: 50%;
  margin: 0 4px;
  cursor: pointer;
}
.dots .active {
  background-color: #717171;
}

/* Botões largos */
.button-container {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 20px;
  flex-wrap: wrap;
}

.button-container a {
  flex: 0 1 400px;
  padding: 20px;
  background-color: #1F7A8C;
  color: white;
  cursor: pointer;
  border-radius: 20px;
  text-decoration: none;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5);
  display: flex;
  flex-direction: row;
  align-items: center;
  min-height: 80px;
}

.button-container a:hover {
  background-color: #186270;
}

/* Imagem dentro do botão */
.button-container a img {
  width: 100px;
  height: 100px;
  margin-right: 15px;
  flex-shrink: 0;
  margin-right: 20px;
}

/* Container para o texto dentro do botão */
.button-text-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
}

/* Estilos para o texto dentro dos botões */
.button-title {
  font-size: 20px;
  font-weight: bold;
  margin-bottom: 5px;
  text-align: center;
}

.button-subtitle {
  font-size: 14px;
  font-weight: normal;
  opacity: 0.9;
  text-align: center;
}

/* Rodapé */
footer {
  background-color: #b30000;
  color: #ecf0f1;
  padding: 40px 20px;
  margin-top: 60px;
}

.footer-container {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  max-width: 1200px;
  margin: 0 auto;
  gap: 50px;
}

.footer-column {
  flex: 1;
  min-width: 280px;
}

.footer-column h4 {
  color: white;
  margin-top: 0;
  border-bottom: 1px solid #1f7a8c;
  padding-bottom: 10px;
  margin-bottom: 15px;
}

.donation-content {
  display: flex;
  align-items: center;
  gap: 20px;
}

.donation-content img {
  max-width: 150px;
  height: auto;
  flex-shrink: 0; /* Impede que a imagem seja espremida */
}

.donation-text p:last-child {
  margin-bottom: 0;
}

.social-item {
  display: flex;
  align-items: center;
  margin-bottom: 15px; /* Espaço entre os itens sociais */
  gap: 20px;
}

.social-item svg {
  width: 24px;
  height: 24px;
  fill: #212121;
  transition: transform 0.2s;
}

.social-item:last-child {
  margin-bottom: 0;
}

.social-icons {
  margin-top: 15px;
}

.social-item a {
  margin-right: 15px;
}

.footer-logo {
  display: flex;
  justify-content: center;
  align-items: center;
}

.footer-logo img {
  width: 250px;
  height: 250px;
  object-fit: contain;
}

/* Para configurar os textos que resumem o conteúdo de cada página; na parte superior; é apenas para as páginas de conteúdo, portanto é melhor deixar nesse arquivo, pois ele contém as classes comuns a todas as páginas */
.summary-text {
  position: relative;
  text-align: center;
  padding: 20px 60px;
  margin-bottom: 20px;
}

/* Estilo para o ícone de voltar DENTRO do summary-text */
.summary-text .back {
  position: absolute;
  left: 30px;
  top: 20px;
  color: #262626;
  text-decoration: none;
}
.summary-text .back .material-symbols-outlined {
  font-size: 35px; /* Tamanho do ícone */
}

.summary-title {
  font-size: 35px;
  font-weight: bold;
  color: #262626;
  margin: 0 0 10px 0;
}

.summary-subtitle {
  font-size: 19px;
  color: #565555;
  max-width: 600px;
  margin: 0 auto;
}

/* Estilos do Modal (Pop-up) */

/* O fundo escuro que cobre a página */
.modal-overlay {
  display: none; /* Começa escondido */
  position: fixed; /* Fica fixo na tela, mesmo com scroll */
  z-index: 1000; /* Garante que fique na frente de tudo */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7); /* Fundo preto semi-transparente */
  justify-content: center; /* Centraliza o conteúdo horizontalmente */
  align-items: center; /* Centraliza o conteúdo verticalmente */
}

/* A caixa branca do pop-up */
.modal-content {
  background-color: #f8f9fa;
  padding: 20px 20px;
  border-radius: 15px;
  position: relative;
  width: 90%;
  max-width: 450px;
  text-align: left; /* Alinhamento geral para a esquerda */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* O botão de fechar (X) */
.modal-close {
  color: #aaa;
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 32px;
  font-weight: bold;
  cursor: pointer;
}

.modal-close:hover {
  color: #333;
}

/* Corpo do modal com layout flex para alinhar imagem e texto */
.modal-body {
  display: flex;
  align-items: flex-start;
  gap: 20px;
}

.modal-content img {
  width: 120px;
  height: 150px;
  object-fit: cover;
  border-radius: 20px;
  border: 5px solid #1F7A8C;
  flex-shrink: 0; /* Impede que a imagem encolha */
}

.modal-info h2 {
  margin-top: 0;
}

.modal-info p {
  margin: 8px 0;
}

/* Estilização da lista de mantimentos com ícone de patinha */
.modal-content ul {
  list-style: none;
  padding-left: 0;
  margin-top: 15px;
}

.modal-content li {
  display: flex;
  align-items: flex-start;
  margin-bottom: 10px;
  line-height: 1.4;
}

.modal-content li::before {
  content: "pets"; /* ícone do google */
  font-family: "Material Symbols Outlined";
  font-size: 20px;
  color: #1f7a8c;
  margin-right: 8px;
  flex-shrink: 0; /* Impede que o ícone seja espremido se o texto for longo */
}
</file>

<file path="Usuario/JS/adocao.js">
document.addEventListener("DOMContentLoaded", function () {
  // Função para gerar as tags de características
  function createTagsHtml(animal) {
    let tagsHtml = "";
    if (animal.gender === "female") {
      tagsHtml += `<span class="animal-tag gender-female">Fêmea</span>`;
    } else {
      tagsHtml += `<span class="animal-tag gender-male">Macho</span>`;
    }
    if (animal.isVaccinated) {
      tagsHtml += `<span class="animal-tag status-vaccinated">Vacinado</span>`;
    }
    if (animal.isNeutered) {
      tagsHtml += `<span class="animal-tag status-neutered">Castrado</span>`;
    }
    return tagsHtml;
  }

  // Função para abrir e preencher o modal
  function openModal(animal) {
    document.getElementById("modal-animal-image").src = animal.image;
    document.getElementById(
      "modal-animal-image"
    ).alt = `Foto de ${animal.name}`;
    document.getElementById("modal-animal-name").textContent = animal.name;
    document.getElementById("modal-animal-age").textContent = animal.age;
    document.getElementById("modal-animal-size").textContent = animal.size;
    document.getElementById("modal-animal-gender").textContent =
      animal.gender === "female" ? "Fêmea" : "Macho";
    document.getElementById("modal-animal-neutered").textContent =
      animal.isNeutered ? "Sim" : "Não";
    document.getElementById("modal-animal-vaccinated").textContent =
      animal.isVaccinated ? "Sim" : "Não";
    document.getElementById("modal-animal-temperament").textContent =
      animal.temperament;

    // Exibe o modal
    document.getElementById("animal-modal").style.display = "flex";
  }

  // Função para fechar o modal
  function closeModal() {
    document.getElementById("animal-modal").style.display = "none";
  }

  // Adiciona eventos para fechar o modal
  document.querySelector(".modal-close").addEventListener("click", closeModal);
  document
    .querySelector(".modal-overlay")
    .addEventListener("click", (event) => {
      // Fecha o modal apenas se o clique for no fundo (overlay) e não no conteúdo
      if (event.target === document.querySelector(".modal-overlay")) {
        closeModal();
      }
    });

  // Função principal para buscar dados e construir a página
  async function initializePage() {
    const container = document.getElementById("animal-list");
    try {
      const response = await fetch("../JSON/adocao.json");
      if (!response.ok) {
        throw new Error(`Erro na requisição: ${response.statusText}`);
      }
      const animals = await response.json();

      // Preenche o container com os cards dos animais
      animals.forEach((animal) => {
        const card = document.createElement("a");
        card.className = "animal-card";
        card.href = "#";
        card.dataset.animalId = animal.id;

        const cardHtml = `
          <img src="${animal.image}" alt="Foto de ${animal.name}" />
          <div class="animals-button-text-container">
            <div class="animal-attribute-row"><span class="animals-button-characteristics">Nome: </span><span class="animals-button-definitions">${
              animal.name
            }</span></div>
            <div class="animal-attribute-row"><span class="animals-button-characteristics">Idade: </span><span class="animals-button-definitions">${
              animal.age
            }</span></div>
            <div class="animal-attribute-row"><span class="animals-button-characteristics">Porte: </span><span class="animals-button-definitions">${
              animal.size
            }</span></div>
            <div class="animal-tags-container">${createTagsHtml(animal)}</div>
          </div>
        `;
        card.innerHTML = cardHtml;
        container.appendChild(card);
      });

      // Adiciona o event listener ao container após os cards serem criados
      container.addEventListener("click", function (event) {
        event.preventDefault();
        const clickedCard = event.target.closest(".animal-card");
        if (clickedCard) {
          const animalId = clickedCard.dataset.animalId;
          const selectedAnimal = animals.find(
            (animal) => animal.id.toString() === animalId
          );
          if (selectedAnimal) {
            openModal(selectedAnimal);
          }
        }
      });
    } catch (error) {
      console.error("Falha ao carregar os dados dos animais:", error);
      container.innerHTML =
        "<p style='text-align: center; color: #b30000;'>Não foi possível carregar a lista de animais. Tente novamente mais tarde.</p>";
    }
  }

  initializePage();
});
</file>

<file path="Usuario/JS/login.js">
// Importa as funções necessárias do Firebase SDK
import { initializeApp } from "https://www.gstatic.com/firebasejs/12.1.0/firebase-app.js";
import {
  getAuth,
  signInWithEmailAndPassword,
  sendPasswordResetEmail,
} from "https://www.gstatic.com/firebasejs/12.1.0/firebase-auth.js";

// Sua configuração do Firebase (cole aqui)
const firebaseConfig = {
  apiKey: "AIzaSyAE34wFaTK91aYLe8ar4V6DvGcEXyxyG3s",
  authDomain: "street-to-sweet-7f126.firebaseapp.com",
  projectId: "street-to-sweet-7f126",
  storageBucket: "street-to-sweet-7f126.firebasestorage.app",
  messagingSenderId: "879182530266",
  appId: "1:879182530266:web:08e5fd3ec431a5c77c87e3",
  measurementId: "G-9D3VNC4QE4",
};

// Inicializa o Firebase e o serviço de Autenticação
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);

// Pega os elementos do HTML
const form = document.getElementById("loginForm");
const emailEl = document.getElementById("email");
const pwdEl = document.getElementById("password");
const errorBox = document.getElementById("errorBox");
const togglePwd = document.getElementById("togglePwd");
const pwdIcon = togglePwd.querySelector(".material-symbols-outlined"); // Pega o elemento do ícone
const forgotLink = document.getElementById("forgotLink");
const loginBtn = form.querySelector(".btn-login"); // Pega o botão de login

// Função para mostrar/esconder a senha
togglePwd.addEventListener("click", () => {
  const isPassword = pwdEl.type === "password";
  pwdEl.type = isPassword ? "text" : "password";
  // Troca o ícone
  pwdIcon.textContent = isPassword ? "visibility_off" : "visibility";
});

// Evento de submit do formulário de login
form.addEventListener("submit", async (e) => {
  e.preventDefault(); // Impede o recarregamento da página
  errorBox.style.color = "#b30000";
  errorBox.textContent = "";

  const email = emailEl.value.trim();
  const password = pwdEl.value;

  if (!email || !password) {
    errorBox.textContent = "Preencha e-mail e senha.";
    return;
  }

  // Desabilita o botão para evitar múltiplos cliques e dá feedback ao usuário
  loginBtn.disabled = true;
  loginBtn.textContent = "ENTRANDO...";

  try {
    // Tenta fazer o login com o Firebase
    await signInWithEmailAndPassword(auth, email, password);
    // Se o login for bem-sucedido, redireciona para a página inicial
    window.location.href = "/ADM/HTML/paginaInicial-adm.html";
  } catch (err) {
    // Mapeia os códigos de erro do Firebase para mensagens amigáveis
    const errorMap = {
      "auth/invalid-credential": "E-mail ou senha incorretos.",
      "auth/invalid-email": "O formato do e-mail é inválido.",
      "auth/user-disabled": "Este usuário foi desativado.",
      "auth/user-not-found": "Usuário não encontrado.",
      "auth/wrong-password": "Senha incorreta.",
    };
    // Exibe a mensagem de erro
    errorBox.textContent =
      errorMap[err.code] || "Falha no login. Tente novamente.";
    console.error("Erro de login:", err);
  } finally {
    // Reabilita o botão, independentemente de sucesso ou falha
    loginBtn.disabled = false;
    loginBtn.textContent = "ENTRAR";
  }
});

// Evento para o link "Esqueci minha senha"
forgotLink.addEventListener("click", async (e) => {
  e.preventDefault();
  errorBox.style.color = "#b30000";
  errorBox.textContent = "";

  const email = emailEl.value.trim();
  if (!email) {
    errorBox.textContent = "Digite seu e-mail para recuperar a senha.";
    return;
  }

  try {
    await sendPasswordResetEmail(auth, email);
    errorBox.textContent = "E-mail de recuperação enviado com sucesso!";
    errorBox.style.color = "green";
  } catch (err) {
    errorBox.textContent =
      "Não foi possível enviar o e-mail. Verifique o endereço.";
    console.error("Erro ao enviar e-mail de recuperação:", err);
  }
});
</file>

<file path="ADM/JS/adocao-adm.js">
import {
  db,
  doc,
  getDoc,
  setDoc,
  collection,
  getDocs,
  addDoc,
  deleteDoc,
} from "./firebase-adm.js";

document.addEventListener("DOMContentLoaded", function () {
  let loadedAnimals = []; // Armazena os animais carregados
  const animalListContainer = document.getElementById("animal-list");

  /**
   * Converts a file to a Base64 encoded string.
   * @param {File} file The file to convert.
   * @returns {Promise<string>} A promise that resolves with the Base64 string.
   */
  function fileToBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result);
      reader.onerror = (error) => reject(error);
    });
  }

  // Função para gerar as tags de características
  function createTagsHtml(animal) {
    let tagsHtml = "";
    if (animal.gender === "female") {
      tagsHtml += `<span class="animal-tag gender-female">Fêmea</span>`;
    } else {
      tagsHtml += `<span class="animal-tag gender-male">Macho</span>`;
    }
    if (animal.isVaccinated) {
      tagsHtml += `<span class="animal-tag status-vaccinated">Vacinado</span>`;
    }
    if (animal.isNeutered) {
      tagsHtml += `<span class="animal-tag status-neutered">Castrado</span>`;
    }
    return tagsHtml;
  }

  // Função para abrir e preencher o modal de DETALHES
  function openDetailModal(animal) {
    document.getElementById("modal-animal-image").src = animal.image;
    document.getElementById(
      "modal-animal-image"
    ).alt = `Foto de ${animal.name}`;
    document.getElementById("modal-animal-name").textContent = animal.name;
    document.getElementById("modal-animal-age").textContent = animal.age;
    document.getElementById("modal-animal-size").textContent = animal.size;
    document.getElementById("modal-animal-gender").textContent =
      animal.gender === "female" ? "Fêmea" : "Macho";
    document.getElementById("modal-animal-neutered").textContent =
      animal.isNeutered ? "Sim" : "Não";
    document.getElementById("modal-animal-vaccinated").textContent =
      animal.isVaccinated ? "Sim" : "Não";
    document.getElementById("modal-animal-temperament").textContent =
      animal.temperament;

    // Exibe o modal
    document.getElementById("animal-modal").style.display = "flex";
  }

  // Função para fechar o modal
  function closeDetailModal() {
    document.getElementById("animal-modal").style.display = "none";
  }

  // Adiciona eventos para fechar o modal
  document
    .querySelector("#animal-modal .modal-close")
    .addEventListener("click", closeDetailModal);
  document
    .querySelector(".modal-overlay")
    .addEventListener("click", (event) => {
      // Fecha o modal apenas se o clique for no fundo (overlay) e não no conteúdo
      if (event.target === document.querySelector(".modal-overlay")) {
        closeDetailModal();
      }
    });

  /**
   * Renderiza a lista de animais na página principal.
   * @param {Array} animals - Array de objetos de animais.
   */
  function renderAnimals(animals) {
    if (!animalListContainer) return;
    animalListContainer.innerHTML = "";

    animals.forEach((animal) => {
      const card = document.createElement("a");
      card.className = "animal-card";
      card.href = "#";
      card.dataset.animalId = animal.id;

      const cardHtml = `
        <img src="${animal.image}" alt="Foto de ${animal.name}" />
        <div class="animals-button-text-container">
          <div class="animal-attribute-row"><span class="animals-button-characteristics">Nome: </span><span class="animals-button-definitions">${
            animal.name
          }</span></div>
          <div class="animal-attribute-row"><span class="animals-button-characteristics">Idade: </span><span class="animals-button-definitions">${
            animal.age
          }</span></div>
          <div class="animal-attribute-row"><span class="animals-button-characteristics">Porte: </span><span class="animals-button-definitions">${
            animal.size
          }</span></div>
          <div class="animal-tags-container">${createTagsHtml(animal)}</div>
        </div>
      `;
      card.innerHTML = cardHtml;
      animalListContainer.appendChild(card);
    });
  }

  /**
   * Carrega os animais do Firestore.
   */
  async function loadAnimals() {
    try {
      const animalsCollectionRef = collection(db, "pages", "adocao", "items");
      const querySnapshot = await getDocs(animalsCollectionRef);

      if (querySnapshot.empty) {
        console.log("Nenhum animal encontrado no banco de dados.");
        loadedAnimals = [];
        renderAnimals([]);
        return;
      }

      loadedAnimals = [];
      querySnapshot.forEach((doc) => {
        loadedAnimals.push({ id: doc.id, ...doc.data() });
      });
      renderAnimals(loadedAnimals);
    } catch (error) {
      console.error("Erro ao carregar animais:", error);
      if (animalListContainer) {
        animalListContainer.innerHTML = "<p>Erro ao carregar animais.</p>";
      }
    }
  }

  // Adiciona o event listener ao container para abrir o modal de detalhes
  if (animalListContainer) {
    animalListContainer.addEventListener("click", function (event) {
      event.preventDefault();
      const clickedCard = event.target.closest(".animal-card");
      if (clickedCard) {
        const animalId = clickedCard.dataset.animalId;
        const selectedAnimal = loadedAnimals.find(
          (animal) => animal.id === animalId
        );
        if (selectedAnimal) {
          openDetailModal(selectedAnimal);
        }
      }
    });
  }

  // --- Lógica para o Modal de Edição ---
  const openEditModalBtn = document.getElementById("open-edit-modal");
  const editModal = document.getElementById("edit-modal");
  const pageContentRef = doc(db, "pages", "adocao"); // Referência ao documento no Firestore

  async function loadPageContent() {
    try {
      const docSnap = await getDoc(pageContentRef);
      if (docSnap.exists()) {
        const data = docSnap.data();
        document.querySelector(".summary-title").textContent =
          data.title || "Adoção";
        document.querySelector(".summary-subtitle").textContent =
          data.subtitle || "Confira os animais disponíveis para adoção!";
      } else {
        console.log(
          "Documento de conteúdo da página não encontrado, usando valores padrão."
        );
      }
    } catch (error) {
      console.error("Erro ao carregar conteúdo da página:", error);
    }
  }

  /**
   * Cria o formulário de edição para um animal individual.
   * @param {object} animal - O objeto do animal. Se vazio, cria um formulário para um novo.
   * @returns {HTMLElement} - O elemento do formulário.
   */
  function createAnimalEditForm(animal = {}) {
    const formId = animal.id || `new-${Date.now()}`;
    const container = document.createElement("div");
    container.className = "form-section";
    container.dataset.animalId = formId;

    container.innerHTML = `
      <button type="button" class="remove-item-btn">Remover</button>
      <h4>Animal: ${animal.name || "(Novo)"}</h4>
      <div class="form-group">
        <label for="animal-name-${formId}">Nome:</label>
        <input type="text" id="animal-name-${formId}" class="animal-name-input" value="${
      animal.name || ""
    }" required>
      </div>
      <div class="form-group">
        <label for="animal-age-${formId}">Idade:</label>
        <input type="text" id="animal-age-${formId}" class="animal-age-input" value="${
      animal.age || ""
    }" required>
      </div>
      <div class="form-group">
        <label for="animal-temperament-${formId}">Temperamento:</label>
        <input type="text" id="animal-temperament-${formId}" class="animal-temperament-input" value="${
      animal.temperament || ""
    }" required>
      </div>
      <div class="form-group">
        <label for="animal-size-${formId}">Porte:</label>
        <select id="animal-size-${formId}" class="animal-size-input">
          <option value="Pequeno" ${
            animal.size === "Pequeno" ? "selected" : ""
          }>Pequeno</option>
          <option value="Médio" ${
            animal.size === "Médio" ? "selected" : ""
          }>Médio</option>
          <option value="Grande" ${
            animal.size === "Grande" ? "selected" : ""
          }>Grande</option>
        </select>
      </div>
      <div class="form-group">
        <label for="animal-gender-${formId}">Gênero:</label>
        <select id="animal-gender-${formId}" class="animal-gender-input">
          <option value="male" ${
            animal.gender === "male" ? "selected" : ""
          }>Macho</option>
          <option value="female" ${
            animal.gender === "female" ? "selected" : ""
          }>Fêmea</option>
        </select>
      </div>
      <div class="form-group form-group-checkbox">
        <input type="checkbox" id="animal-neutered-${formId}" class="animal-neutered-input" ${
      animal.isNeutered ? "checked" : ""
    }>
        <label for="animal-neutered-${formId}">Castrado</label>
      </div>
      <div class="form-group form-group-checkbox">
        <input type="checkbox" id="animal-vaccinated-${formId}" class="animal-vaccinated-input" ${
      animal.isVaccinated ? "checked" : ""
    }>
        <label for="animal-vaccinated-${formId}">Vacinado</label>
      </div>
      <div class="form-group">
        <label>Foto:</label>
        <div class="image-upload-container">
          <img src="${
            animal.image || ""
          }" alt="Pré-visualização" class="image-preview" id="animal-img-preview-${formId}">
          <input type="file" id="animal-img-${formId}" class="animal-img-input" accept="image/*">
        </div>
      </div>
    `;

    container
      .querySelector(".remove-item-btn")
      .addEventListener("click", () => {
        if (confirm("Tem certeza que deseja remover este animal?")) {
          container.dataset.deleted = "true";
          container.style.display = "none";
        }
      });

    const fileInput = container.querySelector(".animal-img-input");
    const preview = container.querySelector(".image-preview");
    fileInput.addEventListener("change", () => {
      const file = fileInput.files[0];
      if (file) preview.src = URL.createObjectURL(file);
    });

    return container;
  }

  if (openEditModalBtn && editModal) {
    const closeEditModalBtn = document.getElementById("close-edit-modal");
    const cancelEditBtn = document.getElementById("cancel-edit");
    const editForm = document.getElementById("edit-form");
    const animalsEditList = document.getElementById("animals-edit-list");
    const addAnimalBtn = document.getElementById("add-animal-btn");

    function populateEditForm() {
      const currentTitle = document.querySelector(".summary-title").textContent;
      const currentSubtitle =
        document.querySelector(".summary-subtitle").textContent;
      document.getElementById("edit-title").value = currentTitle.trim();
      document.getElementById("edit-subtitle").value = currentSubtitle.trim();

      animalsEditList.innerHTML = "";
      loadedAnimals.forEach((animal) => {
        const formElement = createAnimalEditForm(animal);
        animalsEditList.appendChild(formElement);
      });
    }

    addAnimalBtn.addEventListener("click", () => {
      const newForm = createAnimalEditForm();
      animalsEditList.prepend(newForm);
    });

    async function saveChanges(event) {
      event.preventDefault();
      const submitButton = editForm.querySelector('button[type="submit"]');
      submitButton.disabled = true;
      submitButton.textContent = "Salvando...";

      try {
        // 1. Salvar título e subtítulo da página
        const newTitle = document.getElementById("edit-title").value;
        const newSubtitle = document.getElementById("edit-subtitle").value;
        await setDoc(pageContentRef, {
          title: newTitle,
          subtitle: newSubtitle,
        });

        // 2. Processar cada formulário de animal
        const animalForms = animalsEditList.querySelectorAll(".form-section");
        const promises = [];

        for (const form of animalForms) {
          const animalId = form.dataset.animalId;
          const isNew = animalId.startsWith("new-");

          if (form.dataset.deleted === "true") {
            if (!isNew) {
              promises.push(
                deleteDoc(doc(db, "pages", "adocao", "items", animalId))
              );
            }
            continue;
          }

          const name = form.querySelector(".animal-name-input").value;
          const imageInput = form.querySelector(".animal-img-input");
          const imagePreview = form.querySelector(".image-preview");

          const animalData = {
            name: name,
            age: form.querySelector(".animal-age-input").value,
            temperament: form.querySelector(".animal-temperament-input").value,
            size: form.querySelector(".animal-size-input").value,
            gender: form.querySelector(".animal-gender-input").value,
            isNeutered: form.querySelector(".animal-neutered-input").checked,
            isVaccinated: form.querySelector(".animal-vaccinated-input")
              .checked,
            image: imagePreview.src, // URL existente ou de um blob local
          };

          const saveProcess = async () => {
            // Se uma nova imagem foi selecionada, converte para Base64
            if (imageInput.files[0]) {
              const file = imageInput.files[0];
              animalData.image = await fileToBase64(file);
            }

            // Salva no Firestore
            if (isNew) {
              await addDoc(
                collection(db, "pages", "adocao", "items"),
                animalData
              );
            } else {
              await setDoc(
                doc(db, "pages", "adocao", "items", animalId),
                animalData
              );
            }
          };

          promises.push(saveProcess());
        }

        await Promise.all(promises);

        // 3. Atualizar UI e fechar modal
        await loadPageContent();
        await loadAnimals();
        alert("Alterações salvas com sucesso!");
        editModal.style.display = "none";
      } catch (error) {
        console.error("Erro ao salvar alterações: ", error);
        alert(
          "Falha ao salvar as alterações. Verifique o console para mais detalhes."
        );
      } finally {
        submitButton.disabled = false;
        submitButton.textContent = "Salvar Alterações";
      }
    }

    openEditModalBtn.addEventListener("click", () => {
      populateEditForm();
      editModal.style.display = "flex";
    });

    closeEditModalBtn.addEventListener("click", () => {
      editModal.style.display = "none";
    });

    cancelEditBtn.addEventListener("click", () => {
      editModal.style.display = "none";
    });

    editModal.addEventListener("click", (event) => {
      if (event.target === editModal) {
        editModal.style.display = "none";
      }
    });

    editForm.addEventListener("submit", saveChanges);
  }

  // Carrega o conteúdo da página (título/subtítulo) e a lista de animais
  loadPageContent();
  loadAnimals();
});
</file>

<file path="ADM/CSS/paginaInicial-adm.css">
body {
  margin: 0;
  font-family: Arial, sans-serif;
  background-color: #f8f9fa;
}

/* Ícone de usuário (Login) */
.top-bar-main .user-icon {
  position: absolute;
  top: 50%;
  right: 20px;
  transform: translateY(-50%);
  color: #001427;
  text-decoration: none;
}

.top-bar-main .user-icon .material-symbols-outlined {
  font-size: 40px; /* Tamanho do ícone de usuário */
}

.top-bar-main {
  background-color: #708D81; /* vermelho igual do Figma */
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px 20px;
  position: relative;
}

.top-bar-secondary {
  background-color: #001427; /* azul igual do Figma */
  height: 10px;
  margin-bottom: 30px;
}

/* Estilo para o botão "Voltar" no cabeçalho */
.top-bar-main .back {
  position: absolute;
  left: 20px;
  top: 50%;
  transform: translateY(-50%);
  color: #001427;
  text-decoration: none;
  font-size: 16px; /* Tamanho do texto, se houver */
  display: flex; /* Alinha o ícone e o texto na mesma linha */
  align-items: center; /* Centraliza verticalmente o ícone e o texto */
  gap: 5px; /* Espaço entre o ícone e o texto */
}

/* Estilo específico para o ícone de voltar */
.top-bar-main .back .material-symbols-outlined {
  font-size: 28px;
}

.top-bar-main .edit-button {
  position: absolute;
  top: 50%;
  right: 80px;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  gap: 8px;
  color: white;
  text-decoration: none;
  font-size: 16px;
  padding: 8px 12px;
  border-radius: 15px;
  background-color: #001427;
  transition: filter 0.3s ease;
  cursor: pointer;
}

.top-bar-main .edit-button:hover {
  filter: brightness(1.2);
}

/* para os ícones do google */
.material-symbols-outlined {
  font-family: "Material Symbols Outlined";
  font-weight: normal;
  font-style: normal;
  font-size: 24px; /* Tamanho padrão, pode ser sobrescrito como na classe .back */
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-variation-settings: "FILL" 0, "wght" 400, "GRAD" 0, "opsz" 24;
}

/* Carrossel */
.carousel {
  width: 50%;
  margin: 0 auto;
  margin-bottom: 50px;
  position: relative;
  overflow: hidden;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}
.slides {
  display: flex;
  transition: transform 0.5s ease-in-out;
}
.slides img {
  width: 100%;
  height: 300px;
  object-fit: cover;
}

/* Botões do carrossel */
.prev,
.next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  font-size: 24px;
  padding: 10px;
  cursor: pointer;
}
.prev {
  left: 10px;
}
.next {
  right: 10px;
}

/* Indicadores */
.dots {
  text-align: center;
  position: absolute;
  bottom: 10px;
  width: 100%;
}
.dots span {
  display: inline-block;
  width: 12px;
  height: 12px;
  background-color: #bbb;
  border-radius: 50%;
  margin: 0 4px;
  cursor: pointer;
}
.dots .active {
  background-color: #717171;
}

/* Botões largos */
.button-container {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 20px;
  flex-wrap: wrap;
}

.button-container a {
  flex: 0 1 400px;
  padding: 20px;
  background-color: #8D0801;
  color: #F4D58D;
  cursor: pointer;
  border-radius: 20px;
  text-decoration: none;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5);
  display: flex;
  flex-direction: row;
  align-items: center;
  min-height: 80px;
}

.button-container a:hover {
  background-color: #ad0c0a;
}

/* Imagem dentro do botão */
.button-container a img {
  width: 100px;
  height: 100px;
  margin-right: 15px;
  flex-shrink: 0;
  margin-right: 20px;
}

/* Container para o texto dentro do botão */
.button-text-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
}

/* Estilos para o texto dentro dos botões */
.button-title {
  font-size: 20px;
  font-weight: bold;
  margin-bottom: 5px;
  text-align: center;
}

.button-subtitle {
  font-size: 14px;
  font-weight: normal;
  opacity: 0.9;
  text-align: center;
}

/* Rodapé */
footer {
  background-color: #708D81;
  color: #001427;
  padding: 40px 20px;
  margin-top: 60px;
}

.footer-container {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  max-width: 1200px;
  margin: 0 auto;
  gap: 50px;
}

.footer-column {
  flex: 1;
  min-width: 280px;
}

.footer-column h4 {
  color: 001427;
  margin-top: 0;
  border-bottom: 1px solid #001427;
  padding-bottom: 10px;
  margin-bottom: 15px;
}

.donation-content {
  display: flex;
  align-items: center;
  gap: 20px;
}

.donation-content img {
  max-width: 150px;
  height: auto;
  flex-shrink: 0; /* Impede que a imagem seja espremida */
}

.donation-text p:last-child {
  margin-bottom: 0;
}

.social-item {
  display: flex;
  align-items: center;
  margin-bottom: 15px; /* Espaço entre os itens sociais */
  gap: 20px;
}

.social-item svg {
  width: 24px;
  height: 24px;
  fill: #212121;
  transition: transform 0.2s;
}

.social-item:last-child {
  margin-bottom: 0;
}

.social-icons {
  margin-top: 15px;
}

.social-item a {
  margin-right: 15px;
}

.footer-logo {
  display: flex;
  justify-content: center;
  align-items: center;
}

.footer-logo img {
  width: 250px;
  height: 250px;
  object-fit: contain;
}

/* Para configurar os textos que resumem o conteúdo de cada página; na parte superior; é apenas para as páginas de conteúdo, portanto é melhor deixar nesse arquivo, pois ele contém as classes comuns a todas as páginas */
.summary-text {
  position: relative;
  text-align: center;
  padding: 20px 60px;
  margin-bottom: 20px;
}

/* Estilo para o ícone de voltar DENTRO do summary-text */
.summary-text .back {
  position: absolute;
  left: 30px;
  top: 20px;
  color: #262626;
  text-decoration: none;
}
.summary-text .back .material-symbols-outlined {
  font-size: 35px; /* Tamanho do ícone */
}

.summary-title {
  font-size: 35px;
  font-weight: bold;
  color: #262626;
  margin: 0 0 10px 0;
}

.summary-subtitle {
  font-size: 19px;
  color: #565555;
  max-width: 600px;
  margin: 0 auto;
}

/* Estilos do Modal (Pop-up) */

/* O fundo escuro que cobre a página */
.modal-overlay {
  display: none; /* Começa escondido */
  position: fixed; /* Fica fixo na tela, mesmo com scroll */
  z-index: 1000; /* Garante que fique na frente de tudo */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7); /* Fundo preto semi-transparente */
  justify-content: center; /* Centraliza o conteúdo horizontalmente */
  align-items: center; /* Centraliza o conteúdo verticalmente */
}

/* A caixa branca do pop-up */
.modal-content {
  background-color: #f8f9fa;
  padding: 20px 20px;
  border-radius: 15px;
  position: relative;
  width: 90%;
  max-width: 450px;
  text-align: left; /* Alinhamento geral para a esquerda */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* O botão de fechar (X) */
.modal-close {
  color: #aaa;
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 32px;
  font-weight: bold;
  cursor: pointer;
}

.modal-close:hover {
  color: #333;
}

/* Corpo do modal com layout flex para alinhar imagem e texto */
.modal-body {
  display: flex;
  align-items: flex-start;
  gap: 20px;
}

.modal-info h2 {
  margin-top: 0;
}

.modal-info p {
  margin: 8px 0;
}

/* Estilização da lista de mantimentos com ícone de patinha */
.modal-content ul {
  list-style: none;
  padding-left: 0;
  margin-top: 15px;
}

.modal-content li {
  display: flex;
  align-items: flex-start;
  margin-bottom: 10px;
  line-height: 1.4;
}

.modal-content li::before {
  content: "pets"; /* ícone do google */
  font-family: "Material Symbols Outlined";
  font-size: 20px;
  color: #1f7a8c;
  margin-right: 8px;
  flex-shrink: 0; /* Impede que o ícone seja espremido se o texto for longo */
}

/* Menu Dropdown do Usuário */

/* Container ícone + menu */
.user-menu-container {
  position: absolute;
  top: 50%;
  right: 20px;
  transform: translateY(-50%);
}

/* Remove o posicionamento do ícone individual */
.top-bar-main .user-icon {
  position: static;
  transform: none;
}

.user-dropdown {
  display: none;
  position: absolute;
  top: 120%;
  right: 0;
  background-color: white;
  color: #333;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  min-width: 220px;
  z-index: 1001; /* Garante que fique sobre outros elementos */
  flex-direction: column;
}

.user-dropdown::after {
  content: "";
  position: absolute;
  bottom: 100%; /* Posiciona a ponta no topo do menu */
  right: 15px; /* Alinha a ponta com o ícone */
  border-width: 8px;
  border-style: solid;
  border-color: transparent transparent white transparent;
}

/* Links dentro do dropdown */
.user-dropdown a {
  color: #333;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  text-align: left;
}

.user-dropdown a:hover {
  background-color: #f1f1f1;
}
/* para não ultrapassar as bordas do container */
.user-dropdown a:first-child {
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
}
.user-dropdown a:last-child {
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
}

/* --- Estilos para o Modal de Edição --- */

/* Modal de edição maior e com rolagem interna */
.modal-content.large {
  max-width: 800px; /* Aumenta a largura máxima */
  max-height: 90vh; /* Adiciona uma altura máxima */
  overflow-y: auto; /* Permite rolagem se o conteúdo for muito grande */
}

/* Título e parágrafo dentro do modal */
.modal-content h2 {
  margin-top: 0;
  color: #001427;
}

.modal-content p {
  margin-bottom: 25px;
}

/* Estilo para os grupos de campos do formulário */
#edit-form fieldset {
  border: 1px solid #ccc;
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 25px;
  background-color: #fff;
}

/* Título de cada grupo de campos */
#edit-form legend {
  font-size: 1.2em;
  font-weight: bold;
  color: #001427;
  padding: 0 10px;
}

/* Espaçamento entre cada par de label/input */
.form-group {
  margin-bottom: 15px;
}

/* Divisor para subseções (ex: cada botão de ação) */
.form-section {
  border-top: 1px dashed #ddd;
  padding-top: 15px;
  margin-top: 15px;
}

.form-section:first-of-type {
  border-top: none;
  padding-top: 0;
  margin-top: 0;
}

/* Rótulos dos campos */
#edit-form label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
  color: #333;
}

/* Campos de texto e áreas de texto */
#edit-form input[type="text"],
#edit-form textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box; /* Garante que o padding não aumente a largura total */
  font-size: 1em;
  font-family: Arial, sans-serif;
}

/* Container dos botões de ação do formulário */
.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  margin-top: 20px;
}

/* Estilo geral dos botões de ação */
.form-actions button {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  font-size: 1em;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease, filter 0.3s ease;
}

/* Botão de Salvar (primário) */
.form-actions button[type="submit"] {
  background-color: #001427; /* Azul escuro */
  color: white;
}

.form-actions button[type="submit"]:hover {
  filter: brightness(1.3);
}

/* Botão de Cancelar (secundário) */
.form-actions button[type="button"] {
  background-color: #e0e0e0; /* Cinza claro */
  color: #333;
}

.form-actions button[type="button"]:hover {
  background-color: #bdbdbd;
}

/* Botão secundário dentro de um formulário (ex: Adicionar item) */
.form-button-secondary {
  background-color: #e0e0e0;
  color: #333;
  border: 1px solid #ccc;
  padding: 8px 16px;
  border-radius: 5px;
  cursor: pointer;
  font-weight: bold;
  margin-top: 10px;
  transition: background-color 0.2s;
}

.form-button-secondary:hover {
  background-color: #d5d5d5;
}

/* Botão de remover item (ex: dentro de uma sub-seção do formulário) */
.remove-item-btn {
  background-color: #b30000;
  color: white;
  border: none;
  padding: 5px 10px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9em;
  float: right;
  transition: background-color 0.2s;
}

.remove-item-btn:hover {
  background-color: #990000;
}

/* Estilo para grupo de checkbox */
.form-group-checkbox {
  display: flex;
  align-items: center;
  gap: 10px;
}

.form-group-checkbox input[type="checkbox"] {
  width: auto; /* Reseta a largura padrão de 100% */
}

.form-group-checkbox label {
  margin-bottom: 0; /* Reseta a margem do estilo padrão de label */
  font-weight: normal;
}

/* --- Estilos para Upload de Imagem --- */

.image-upload-container {
  display: flex;
  align-items: center;
  gap: 15px;
}

.image-preview {
  width: 190px;
  height: 120px;
  object-fit: cover;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #f0f0f0;
}

.image-preview-code {
  width: 50px;
  height: 50px;
  object-fit: cover;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #f0f0f0;
  vertical-align: middle;
}

.image-preview-logo {
  width: 100px;
  height: 100px;
  object-fit: cover;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #f0f0f0;
  vertical-align: middle;
}

input[type="file"] {
  cursor: pointer;
}

/* Adiciona espaço entre a pré-visualização do logo e o botão de upload */
#logo {
  margin-left: 15px;
}

/* Aplica o cursor de ponteiro especificamente no botão de upload em navegadores WebKit (Chrome, Safari, Edge) */
input[type="file"]::-webkit-file-upload-button {
  cursor: pointer;
}
</file>

<file path="ADM/JS/paginaInicial-adm.js">
import { db, doc, getDoc, setDoc } from "./firebase-adm.js";

document.addEventListener("DOMContentLoaded", function () {
  // --- Lógica do Carrossel ---
  const carousel = document.querySelector(".carousel");
  if (carousel) {
    const slides = carousel.querySelector(".slides");
    const dotsContainer = carousel.querySelector(".dots");
    const totalSlides = slides ? slides.querySelectorAll("img").length : 0;
    let index = 0;
    let interval;

    if (slides && dotsContainer && totalSlides > 0) {
      for (let i = 0; i < totalSlides; i++) {
        const dot = document.createElement("span");
        dot.addEventListener("click", () => {
          index = i;
          updateCarousel();
        });
        dotsContainer.appendChild(dot);
      }

      const dots = dotsContainer.querySelectorAll("span");

      function updateCarousel() {
        slides.style.transform = `translateX(-${index * 100}%)`;
        dots.forEach((dot) => dot.classList.remove("active"));
        if (dots[index]) {
          dots[index].classList.add("active");
        }
      }

      function nextSlide() {
        index = (index + 1) % totalSlides;
        updateCarousel();
      }

      function prevSlide() {
        index = (index - 1 + totalSlides) % totalSlides;
        updateCarousel();
      }

      function startAutoPlay() {
        interval = setInterval(nextSlide, 5000);
      }

      function stopAutoPlay() {
        clearInterval(interval);
      }

      const nextButton = carousel.querySelector(".next");
      const prevButton = carousel.querySelector(".prev");
      if (nextButton) nextButton.addEventListener("click", nextSlide);
      if (prevButton) prevButton.addEventListener("click", prevSlide);

      carousel.addEventListener("mouseenter", stopAutoPlay);
      carousel.addEventListener("mouseleave", startAutoPlay);

      updateCarousel();
      startAutoPlay();
    }
  }

  // --- Lógica para o Modal de Mantimentos ---
  const openModalLink = document.getElementById("open-mantimentos-modal");
  const mantimentosModal = document.getElementById("mantimentos-modal");

  if (openModalLink && mantimentosModal) {
    const closeModalButton = mantimentosModal.querySelector(".modal-close");

    openModalLink.addEventListener("click", function (event) {
      event.preventDefault();
      mantimentosModal.style.display = "flex";
    });

    closeModalButton.addEventListener("click", function () {
      mantimentosModal.style.display = "none";
    });

    mantimentosModal.addEventListener("click", function (event) {
      if (event.target === mantimentosModal) {
        mantimentosModal.style.display = "none";
      }
    });
  }

  // --- Lógica para o dropdown do usuário ---
  const menuTrigger = document.getElementById("user-menu-trigger");
  const dropdownMenu = document.getElementById("user-dropdown-menu");

  if (menuTrigger && dropdownMenu) {
    dropdownMenu.style.display = "none";

    menuTrigger.addEventListener("click", function (event) {
      event.preventDefault();
      if (dropdownMenu.style.display === "none") {
        dropdownMenu.style.display = "flex";
      } else {
        dropdownMenu.style.display = "none";
      }
    });

    window.addEventListener("click", function (event) {
      if (
        !dropdownMenu.contains(event.target) &&
        !menuTrigger.contains(event.target)
      ) {
        dropdownMenu.style.display = "none";
      }
    });
  }

  // --- Lógica para o Modal de Edição ---
  const openEditModalBtn = document.getElementById("open-edit-modal");
  const editModal = document.getElementById("edit-modal");
  const closeEditModalBtn = document.getElementById("close-edit-modal");
  const cancelEditBtn = document.getElementById("cancel-edit");
  const editForm = document.getElementById("edit-form");

  if (!openEditModalBtn || !editModal || !editForm) {
    return;
  }

  /**
   * Converts a file to a Base64 encoded string.
   * @param {File} file The file to convert.
   * @returns {Promise<string>} A promise that resolves with the Base64 string.
   */
  function fileToBase64(file) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result);
      reader.onerror = (error) => reject(error);
    });
  }

  async function loadPageData() {
    const pageContentRef = doc(db, "pages", "paginaInicial");
    try {
      const docSnap = await getDoc(pageContentRef);
      if (docSnap.exists()) {
        const data = docSnap.data();
        updateUI(data);
      } else {
        console.log(
          "Documento da página inicial não encontrado. Usando dados do HTML."
        );
      }
    } catch (error) {
      console.error("Erro ao carregar dados da página inicial:", error);
    } finally {
      initializePageData();
    }
  }

  function populateEditForm() {
    // Carrossel
    document.querySelectorAll(".slides img").forEach((imgEl, i) => {
      const preview = document.getElementById(`carousel-img-${i + 1}-preview`);
      if (preview) {
        preview.src = imgEl.getAttribute("src") || "";
      }
    });

    // Botões de Ação
    document.querySelectorAll(".button-container a").forEach((btn, i) => {
      const index = i + 1;
      const linkInput = document.getElementById(`btn${index}-link`);
      if (linkInput) {
        linkInput.value = btn.getAttribute("href") || "";
      }

      const titleEl = btn.querySelector(".button-title");
      const titleInput = document.getElementById(`btn${index}-title`);
      if (titleEl && titleInput) titleInput.value = titleEl.textContent.trim();

      const subtitleEl = btn.querySelector(".button-subtitle");
      const subtitleInput = document.getElementById(`btn${index}-subtitle`);
      if (subtitleInput) {
        subtitleInput.value = subtitleEl ? subtitleEl.textContent.trim() : "";
      }

      const imgEl = btn.querySelector("img");
      const preview = document.getElementById(`btn${index}-img-preview`);
      if (imgEl && preview) preview.src = imgEl.getAttribute("src") || "";
    });

    // Rodapé
    const pixEl = document.querySelector("#chave-pix");
    const pixInput = document.getElementById("footer-pix-text");
    if (pixEl && pixInput) {
      pixInput.value = pixEl.textContent.trim();
    }

    const phoneEl = document.querySelector(".footer-contact p:nth-of-type(1)");
    const phoneInput = document.getElementById("footer-contact-phone");
    if (phoneEl && phoneInput) {
      const phoneMatch = phoneEl.textContent.match(/\(\d{2}\) \d{5}-\d{4}/);
      phoneInput.value = phoneMatch ? phoneMatch[0] : "";
    }

    const addressEl = document.getElementById("footer-address");
    const addressInput = document.getElementById("footer-address-input");
    if (addressEl && addressInput) {
      addressInput.value = addressEl.lastChild.textContent.trim();
    }

    const facebookEl = document.getElementById("social-facebook-text");
    const facebookInput = document.getElementById("footer-social-facebook");
    if (facebookEl && facebookInput) {
      facebookInput.value = facebookEl.textContent.trim();
    }

    const instagramEl = document.getElementById("social-instagram-text");
    const instagramInput = document.getElementById("footer-social-instagram");
    if (instagramEl && instagramInput) {
      instagramInput.value = instagramEl.textContent.trim();
    }

    const qrCodeEl = document.getElementById("footer-qr-code-img");
    const qrCodePreview = document.getElementById("qr-code-preview");
    if (qrCodeEl && qrCodePreview) {
      qrCodePreview.src = qrCodeEl.src;
    }

    const logoEl = document.getElementById("footer-logo-img");
    const logoPreview = document.getElementById("logo-preview");
    if (logoEl && logoPreview) {
      logoPreview.src = logoEl.src;
    }
  }

  function updateUI(data) {
    const updateImageSrc = (imgElement, newSrc) => {
      if (imgElement && newSrc) {
        imgElement.src = newSrc;
      }
    };

    try {
      if (data.carouselImages) {
        data.carouselImages.forEach((src, i) => {
          const img = document.querySelector(`.slides img:nth-child(${i + 1})`);
          updateImageSrc(img, src);
        });
      }

      if (data.actionButtons) {
        data.actionButtons.forEach((buttonData, i) => {
          const btn = document.querySelector(
            `.button-container a:nth-child(${i + 1})`
          );
          if (btn) {
            if (buttonData.link) btn.href = buttonData.link;
            updateImageSrc(btn.querySelector("img"), buttonData.imgSrc);
            const title = btn.querySelector(".button-title");
            if (title) title.textContent = buttonData.title;
            const subtitle = btn.querySelector(".button-subtitle");
            if (subtitle) subtitle.textContent = buttonData.subtitle;
          }
        });
      }

      if (data.footer) {
        const pixEl = document.querySelector("#chave-pix");
        if (pixEl) pixEl.textContent = data.footer.pixText;

        const mantimentosList = document.querySelector("#mantimentos-modal ul");
        if (mantimentosList && data.footer.mantimentosList) {
          mantimentosList.innerHTML = "";
          data.footer.mantimentosList.forEach((itemText) => {
            if (itemText.trim() !== "") {
              const li = document.createElement("li");
              li.textContent = itemText.trim();
              mantimentosList.appendChild(li);
            }
          });
        }

        const phoneEl = document.querySelector(
          ".footer-contact p:nth-of-type(1)"
        );
        if (phoneEl)
          phoneEl.innerHTML = `<strong>Apoio animal:</strong> ${data.footer.contactPhone}`;

        const footerAddressEl = document.getElementById("footer-address");
        if (footerAddressEl)
          footerAddressEl.innerHTML = `<strong>Endereço:</strong> ${data.footer.address}`;

        const modalAddressEl = document.getElementById("modal-address");
        if (modalAddressEl) modalAddressEl.textContent = data.footer.address;

        const facebookEl = document.getElementById("social-facebook-text");
        if (facebookEl) facebookEl.textContent = data.footer.socialFacebook;

        const instagramEl = document.getElementById("social-instagram-text");
        if (instagramEl) instagramEl.textContent = data.footer.socialInstagram;

        updateImageSrc(
          document.getElementById("footer-qr-code-img"),
          data.footer.qrCodeSrc
        );
        updateImageSrc(
          document.getElementById("footer-logo-img"),
          data.footer.logoSrc
        );
      }
    } catch (error) {
      console.error("Erro ao atualizar a interface:", error);
    }
  }

  async function saveFormChanges(event) {
    event.preventDefault();
    const submitButton = editForm.querySelector('button[type="submit"]');
    submitButton.disabled = true;
    submitButton.textContent = "Salvando...";

    try {
      const processImage = async (inputId, currentSrc) => {
        const input = document.getElementById(inputId);
        if (input && input.files[0]) {
          return await fileToBase64(input.files[0]);
        }
        return currentSrc;
      };

      const pageData = {
        actionButtons: [],
        footer: {
          pixText: document.getElementById("footer-pix-text").value,
          mantimentosList: document
            .getElementById("footer-mantimentos-list")
            .value.split("\n")
            .filter((item) => item.trim() !== ""),
          contactPhone: document.getElementById("footer-contact-phone").value,
          address: document.getElementById("footer-address-input").value,
          socialFacebook: document.getElementById("footer-social-facebook")
            .value,
          socialInstagram: document.getElementById("footer-social-instagram")
            .value,
        },
        carouselImages: [],
      };

      for (let i = 1; i <= 5; i++) {
        const previewEl = document.getElementById(`carousel-img-${i}-preview`);
        const currentSrc = previewEl ? previewEl.src : "";
        const newBase64 = await processImage(`carousel-img-${i}`, currentSrc);
        pageData.carouselImages.push(newBase64);
      }

      for (let i = 1; i <= 5; i++) {
        const index = i;
        const buttonData = {
          title: document.getElementById(`btn${index}-title`).value,
          subtitle: document.getElementById(`btn${index}-subtitle`).value,
        };
        const linkInput = document.getElementById(`btn${index}-link`);
        if (linkInput) {
          buttonData.link = linkInput.value;
        }

        const previewEl = document.getElementById(`btn${index}-img-preview`);
        const currentSrc = previewEl ? previewEl.src : "";
        buttonData.imgSrc = await processImage(`btn${index}-img`, currentSrc);

        pageData.actionButtons.push(buttonData);
      }

      const qrPreview = document.getElementById("qr-code-preview");
      pageData.footer.qrCodeSrc = await processImage(
        "qr-code",
        qrPreview ? qrPreview.src : ""
      );

      const logoPreview = document.getElementById("logo-preview");
      pageData.footer.logoSrc = await processImage(
        "logo",
        logoPreview ? logoPreview.src : ""
      );

      const pageContentRef = doc(db, "pages", "paginaInicial");
      await setDoc(pageContentRef, pageData);

      updateUI(pageData);
      alert("Alterações salvas com sucesso!");
      editModal.style.display = "none";
    } catch (error) {
      console.error("Erro ao salvar as alterações:", error);
      alert(
        "Ocorreu um erro ao salvar as alterações. Verifique o console para mais detalhes."
      );
    } finally {
      submitButton.disabled = false;
      submitButton.textContent = "Salvar Alterações";
    }
  }

  function setupImagePreviews() {
    const fileInputs = document.querySelectorAll('input[type="file"]');
    fileInputs.forEach((input) => {
      const previewId = input.id + "-preview";
      const preview = document.getElementById(previewId);
      if (preview) {
        input.addEventListener("change", () => {
          const file = input.files[0];
          if (file) {
            preview.src = URL.createObjectURL(file);
          }
        });
      }
    });
  }

  function initializePageData() {
    const mantimentosTextarea = document.getElementById(
      "footer-mantimentos-list"
    );
    const mantimentosList = document.querySelector("#mantimentos-modal ul");

    if (mantimentosTextarea && mantimentosList) {
      const items = mantimentosTextarea.value.split("\n");
      mantimentosList.innerHTML = "";
      items.forEach((itemText) => {
        if (itemText.trim() !== "") {
          const li = document.createElement("li");
          li.textContent = itemText.trim();
          mantimentosList.appendChild(li);
        }
      });
    }
  }

  openEditModalBtn.addEventListener("click", () => {
    populateEditForm();
    setupImagePreviews();
    editModal.style.display = "flex";
  });

  closeEditModalBtn.addEventListener("click", () => {
    editModal.style.display = "none";
  });

  cancelEditBtn.addEventListener("click", () => {
    editModal.style.display = "none";
  });

  editModal.addEventListener("click", (event) => {
    if (event.target === editModal) {
      editModal.style.display = "none";
    }
  });

  editForm.addEventListener("submit", (e) => {
    e.preventDefault();
    const firstImagePreview = document.getElementById("carousel-img-1-preview");
    const firstImageInput = document.getElementById("carousel-img-1");
    const hasExistingImage =
      firstImagePreview &&
      firstImagePreview.src &&
      !firstImagePreview.src.endsWith("/");
    const hasNewFile = firstImageInput && firstImageInput.files.length > 0;

    if (!hasExistingImage && !hasNewFile) {
      alert("Por favor, adicione pelo menos a primeira imagem do carrossel.");
      if (firstImageInput) firstImageInput.focus();
      return;
    }

    saveFormChanges(e);
  });

  loadPageData();
});
</file>

<file path="ADM/HTML/paginaInicial-adm.html">
<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página Principal</title>
    <link rel="stylesheet" href="../CSS/paginaInicial-adm.css" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"
    />
    <script type="module" src="../JS/paginaInicial-adm.js"></script>
  </head>

  <body>
    <!-- Faixa do título; deixar igual para todas as páginas -->
    <header>
      <div class="top-bar-main">
        <img src="../../imagens/logo.png" alt="Logo" />

        <!-- Container para os elementos da direita -->
        <div class="top-right-container">
          <!-- Botão de Editar -->
          <button class="edit-button" id="open-edit-modal">
            <span>Editar</span>
          </button>

          <!-- Ícone de usuário -->
          <div class="user-menu-container">
            <a href="#" class="user-icon" id="user-menu-trigger">
              <span class="material-symbols-outlined">account_circle</span>
            </a>

            <!-- menu dropdown -->
            <div class="user-dropdown" id="user-dropdown-menu">
              <a href="#">Cadastrar Novo Usuário</a>
              <a href="#">Alterar Senha/E-mail</a>
              <a href="#">Sair</a>
            </div>
          </div>
        </div>
      </div>

      <div class="top-bar-secondary"></div>
    </header>

    <!-- Carrossel -->
    <div class="carousel">
      <div class="slides">
        <img src="../../imagens/foto1.jpeg" alt="Foto 1" />
        <img src="../../imagens/foto2.jpeg" alt="Foto 2" />
        <img src="../../imagens/foto3.jpeg" alt="Foto 3" />
        <img src="../../imagens/foto4.jpeg" alt="Foto 4" />
        <img src="../../imagens/foto5.jpeg" alt="Foto 5" />
      </div>
      <!-- Controles -->
      <button class="prev">&#10094;</button>
      <button class="next">&#10095;</button>
      <div class="dots"></div>
    </div>

    <!-- Botões largos -->
    <!-- TODOS OS TEXTOS E IMAGENS DEVEM VIR DO BD (APENAS EXEMPLIFICADO ATÉ O MOMENTO) -->
    <div class="button-container">
      <a href="adocao-adm.html">
        <img
          src="../../imagens/Untitled_design__3_-removebg-preview.png"
          alt="Ícone de Adoção"
        />
        <div class="button-text-container">
          <span class="button-title">Adote um animal</span>
          <span class="button-subtitle"
            >Confira os animais disponíveis para adoção!</span
          >
        </div>
      </a>
      <a
        href="https://docs.google.com/forms/d/e/1FAIpQLSc_Z0ExslhkTjMBFYVTPJA4qE6mhJFM81SiVlRYQChkkFyHfA/viewform?usp=header"
        target="_blank"
        rel="noopener noreferrer"
      >
        <img src="../../imagens/iconeDenuncias.png" alt="Ícone de Denuncias" />
        <div class="button-text-container">
          <span class="button-title">Canal de Denúncias</span>
          <span class="button-subtitle"
            >Denuncie situações de maus tratos e abandono!</span
          >
        </div>
      </a>
      <a href="campanhas-adm.html">
        <img src="../../imagens/iconeCampanhas.png" alt="Ícone de Campanhas" />
        <div class="button-text-container">
          <span class="button-title">Campanhas de vacinação e castração</span>
          <span class="button-subtitle"
            >Confira as datas das próximas campanhas!</span
          >
        </div>
      </a>
      <a href="trabalhos-adm.html">
        <img
          src="../../imagens/iconeTrabalhos.png"
          alt="Ícone de Trabalhos Realizados"
        />
        <div class="button-text-container">
          <span class="button-title">Trabalhos Realizados</span>
          <span class="button-subtitle"
            >Acompanhe os trabalhos realizados pela Associação!</span
          >
        </div>
      </a>
      <a
        href="https://docs.google.com/forms/d/e/1FAIpQLSfM2Ccj5_VD3u4FiVVbSRytle4OwPLAvtLNHD4TqkPz2Q5k8w/viewform?usp=header"
        target="_blank"
        rel="noopener noreferrer"
      >
        <img
          src="../../imagens/iconeVoluntarios.png"
          alt="Ícone de Voluntário"
        />
        <div class="button-text-container">
          <span class="button-title">Seja um voluntário</span>
          <!-- Adicionado para consistência e edição -->
          <span class="button-subtitle"></span>
        </div>
      </a>
    </div>

    <footer>
      <div class="footer-container">
        <div class="footer-column footer-donations">
          <h4>Seja um colaborador!</h4>
          <div class="donation-content">
            <img
              src="../../imagens/qr-code.png"
              id="footer-qr-code-img"
              alt="QR Code para doação PIX"
            />
            <div class="donation-text">
              <p id="chave-pix">
                Para auxilio financeiro, escaneie o QR Code ao lado ou envie um
                pix para o CNPJ 06.332.442/0001-11.
              </p>
              <p>
                Para doação de mantimentos, confira a lista dos itens
                necessários
                <a
                  href="#"
                  id="open-mantimentos-modal"
                  style="color: blue; text-decoration: underline"
                  >clicando aqui</a
                >.
              </p>
            </div>
          </div>
        </div>

        <div class="footer-column footer-contact">
          <h4>Informações de contato</h4>
          <p><strong>Apoio animal:</strong> (35) 99999-9999</p>
          <p id="footer-address">
            <strong>Endereço:</strong> Rua Exemplo, 123 - Centro, Santa Rita do
            Sapucaí - MG
          </p>
          <div class="social-icons">
            <div class="social-item">
              <svg
                role="img"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <title>Facebook</title>
                <path
                  d="M22.675 0H1.325C.593 0 0 .593 0 1.325v21.351C0 23.407.593 24 1.325 24H12.82v-9.294H9.692v-3.622h3.128V8.413c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12V24h6.116c.732 0 1.325-.593 1.325-1.325V1.325C24 .593 23.407 0 22.675 0z"
                />
              </svg>
              <span id="social-facebook-text"
                >Sociedade Protetora dos Animais de SRS - MG</span
              >
            </div>
            <div class="social-item">
              <svg
                role="img"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <title>Instagram</title>
                <path
                  d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.765.297 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.297-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.148-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.314.935 20.644.523 19.86.227c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.056 1.17-.249 1.805-.413 2.227-.217.562-.477.96-.896 1.381-.42.419-.819.679-1.381.896-.422.164-1.057.36-2.227.413-1.266.057-1.646.07-4.85.07s-3.585-.015-4.85-.074c-1.17-.056-1.805-.249-2.227-.413-.562-.217-.96-.477-1.381-.896-.419-.42-.679-.819-.896-1.381-.165-.422-.36-1.057-.413-2.227-.055-1.266-.07-1.646-.07-4.85s.015-3.585.07-4.85c.055-1.17.249-1.805.413-2.227.217-.562.477.96.896-1.381.42-.419.819.679 1.381-.896.422-.165 1.057.36 2.227.413C8.415 2.175 8.797 2.16 12 2.16zm0 5.48c-2.49 0-4.5 2.01-4.5 4.5s2.01 4.5 4.5 4.5 4.5-2.01 4.5-4.5-2.01-4.5-4.5-4.5zm0 7.16c-1.473 0-2.66-1.187-2.66-2.66s1.187-2.66 2.66-2.66 2.66 1.187 2.66 2.66-1.187 2.66-2.66 2.66zm6.336-7.74c-.777 0-1.406.63-1.406 1.406s.63 1.406 1.406 1.406 1.406-.63 1.406-1.406c0-.777-.63-1.406-1.406-1.406z"
                />
              </svg>
              <span id="social-instagram-text">@spasrsmg</span>
            </div>
          </div>
        </div>

        <div class="footer-column footer-logo">
          <img
            src="../../imagens/logoONG.png"
            id="footer-logo-img"
            alt="Logo ONG"
          />
        </div>
      </div>
    </footer>

    <!-- Estrutura do Modal de Mantimentos -->
    <div id="mantimentos-modal" class="modal-overlay">
      <div class="modal-content">
        <span class="modal-close">&times;</span>
        <h2>Itens para Doação</h2>
        <p>
          Agradecemos seu interesse em doar! A associação é mantida por meio de
          doações da comunidade e, por isso, seu apoio é de extrema importância
          para a causa. Precisamos principalmente dos seguintes itens:
        </p>
        <!-- A lista de mantimentos será preenchida pelo JavaScript -->
        <ul></ul>
        <p>
          <strong
            >As doações podem ser entregues em nossa sede no endereço:</strong
          >
        </p>
        <p id="modal-address">
          Rua Exemplo, 123 - Centro, Santa Rita do Sapucaí - MG
        </p>
      </div>
    </div>

    <!-- Modal de Edição -->
    <div id="edit-modal" class="modal-overlay">
      <div class="modal-content large">
        <span class="modal-close" id="close-edit-modal">&times;</span>
        <h2>Editar Conteúdo da Página</h2>
        <p>
          Preencha os campos abaixo para alterar o conteúdo da página inicial.
        </p>

        <form id="edit-form">
          <!-- Seção Carrossel -->
          <fieldset>
            <legend>Carrossel de Imagens</legend>
            <div class="form-group">
              <label for="carousel-img-1">Imagem 1:</label>
              <div class="image-upload-container">
                <img
                  src=""
                  alt="Pré-visualização"
                  class="image-preview"
                  id="carousel-img-1-preview"
                />
                <input
                  type="file"
                  id="carousel-img-1"
                  name="carousel-img-1"
                  accept="image/*"
                />
              </div>
            </div>
            <div class="form-group">
              <label for="carousel-img-2">Imagem 2:</label>
              <div class="image-upload-container">
                <img
                  src=""
                  alt="Pré-visualização"
                  class="image-preview"
                  id="carousel-img-2-preview"
                />
                <input
                  type="file"
                  id="carousel-img-2"
                  name="carousel-img-2"
                  accept="image/*"
                />
              </div>
            </div>
            <div class="form-group">
              <label for="carousel-img-3">Imagem 3:</label>
              <div class="image-upload-container">
                <img
                  src=""
                  alt="Pré-visualização"
                  class="image-preview"
                  id="carousel-img-3-preview"
                />
                <input
                  type="file"
                  id="carousel-img-3"
                  name="carousel-img-3"
                  accept="image/*"
                />
              </div>
            </div>
            <div class="form-group">
              <label for="carousel-img-4">Imagem 4:</label>
              <div class="image-upload-container">
                <img
                  src=""
                  alt="Pré-visualização"
                  class="image-preview"
                  id="carousel-img-4-preview"
                />
                <input
                  type="file"
                  id="carousel-img-4"
                  name="carousel-img-4"
                  accept="image/*"
                />
              </div>
            </div>
            <div class="form-group">
              <label for="carousel-img-5">Imagem 5:</label>
              <div class="image-upload-container">
                <img
                  src=""
                  alt="Pré-visualização"
                  class="image-preview"
                  id="carousel-img-5-preview"
                />
                <input
                  type="file"
                  id="carousel-img-5"
                  name="carousel-img-5"
                  accept="image/*"
                />
              </div>
            </div>
          </fieldset>

          <!-- Seção Botões de Ação -->
          <fieldset>
            <legend>Botões de Ação</legend>

            <div class="form-section">
              <h4>Botão 1: Adote um animal</h4>
              <div class="form-group">
                <label for="btn1-title">Título:</label>
                <input
                  type="text"
                  id="btn1-title"
                  name="btn1-title"
                  value="Adote um animal"
                  required
                />
              </div>
              <div class="form-group">
                <label for="btn1-subtitle">Subtítulo (opcional):</label>
                <input
                  type="text"
                  id="btn1-subtitle"
                  name="btn1-subtitle"
                  value="Confira os animais disponíveis para adoção!"
                />
              </div>
              <div class="form-group">
                <label for="btn1-img">Ícone do Botão:</label>
                <div class="image-upload-container">
                  <img
                    src=""
                    alt="Pré-visualização"
                    class="image-preview-code"
                    id="btn1-img-preview"
                  />
                  <input
                    type="file"
                    id="btn1-img"
                    name="btn1-img"
                    accept="image/*"
                  />
                </div>
              </div>
            </div>

            <div class="form-section">
              <h4>Botão 2: Canal de Denúncias</h4>
              <div class="form-group">
                <label for="btn2-link">Link do formulário:</label>
                <input
                  type="text"
                  id="btn2-link"
                  name="btn2-link"
                  value="https://docs.google.com/forms/d/e/1FAIpQLSc_Z0ExslhkTjMBFYVTPJA4qE6mhJFM81SiVlRYQChkkFyHfA/viewform?usp=header"
                  required
                />
              </div>
              <div class="form-group">
                <label for="btn2-title">Título:</label>
                <input
                  type="text"
                  id="btn2-title"
                  name="btn2-title"
                  value="Canal de Denúncias"
                  required
                />
              </div>
              <div class="form-group">
                <label for="btn2-subtitle">Subtítulo (opcional):</label>
                <input
                  type="text"
                  id="btn2-subtitle"
                  name="btn2-subtitle"
                  value="Denuncie situações de maus tratos e abandono!"
                />
              </div>
              <div class="form-group">
                <label for="btn2-img">Ícone do Botão:</label>
                <div class="image-upload-container">
                  <img
                    src=""
                    alt="Pré-visualização"
                    class="image-preview-code"
                    id="btn2-img-preview"
                  />
                  <input
                    type="file"
                    id="btn2-img"
                    name="btn2-img"
                    accept="image/*"
                  />
                </div>
              </div>
            </div>

            <div class="form-section">
              <h4>Botão 3: Campanhas</h4>
              <div class="form-group">
                <label for="btn3-title">Título:</label>
                <input
                  type="text"
                  id="btn3-title"
                  name="btn3-title"
                  value="Campanhas de vacinação e castração"
                  required
                />
              </div>
              <div class="form-group">
                <label for="btn3-subtitle">Subtítulo (opcional):</label>
                <input
                  type="text"
                  id="btn3-subtitle"
                  name="btn3-subtitle"
                  value="Confira as datas das próximas campanhas!"
                />
              </div>
              <div class="form-group">
                <label for="btn3-img">Ícone do Botão:</label>
                <div class="image-upload-container">
                  <img
                    src=""
                    alt="Pré-visualização"
                    class="image-preview-code"
                    id="btn3-img-preview"
                  />
                  <input
                    type="file"
                    id="btn3-img"
                    name="btn3-img"
                    accept="image/*"
                  />
                </div>
              </div>
            </div>

            <div class="form-section">
              <h4>Botão 4: Trabalhos Realizados</h4>
              <div class="form-group">
                <label for="btn4-title">Título:</label>
                <input
                  type="text"
                  id="btn4-title"
                  name="btn4-title"
                  value="Trabalhos Realizados"
                  required
                />
              </div>
              <div class="form-group">
                <label for="btn4-subtitle">Subtítulo (opcional):</label>
                <input
                  type="text"
                  id="btn4-subtitle"
                  name="btn4-subtitle"
                  value="Acompanhe os trabalhos realizados pela Associação!"
                />
              </div>
              <div class="form-group">
                <label for="btn4-img">Ícone do Botão:</label>
                <div class="image-upload-container">
                  <img
                    src=""
                    alt="Pré-visualização"
                    class="image-preview-code"
                    id="btn4-img-preview"
                  />
                  <input
                    type="file"
                    id="btn4-img"
                    name="btn4-img"
                    accept="image/*"
                  />
                </div>
              </div>
            </div>

            <div class="form-section">
              <h4>Botão 5: Seja um voluntário</h4>
              <div class="form-group">
                <label for="btn5-link">Link do formulário:</label>
                <input
                  type="text"
                  id="btn5-link"
                  name="btn5-link"
                  value="https://docs.google.com/forms/d/e/1FAIpQLSfM2Ccj5_VD3u4FiVVbSRytle4OwPLAvtLNHD4TqkPz2Q5k8w/viewform?usp=header"
                  required
                />
              </div>
              <div class="form-group">
                <label for="btn5-title">Título:</label>
                <input
                  type="text"
                  id="btn5-title"
                  name="btn5-title"
                  value="Seja um voluntário"
                  required
                />
              </div>
              <div class="form-group">
                <label for="btn5-subtitle">Subtítulo (opcional):</label>
                <input
                  type="text"
                  id="btn5-subtitle"
                  name="btn5-subtitle"
                  value=""
                />
              </div>
              <div class="form-group">
                <label for="btn5-img">Ícone do Botão:</label>
                <div class="image-upload-container">
                  <img
                    src=""
                    alt="Pré-visualização"
                    class="image-preview-code"
                    id="btn5-img-preview"
                  />
                  <input
                    type="file"
                    id="btn5-img"
                    name="btn5-img"
                    accept="image/*"
                  />
                </div>
              </div>
            </div>
          </fieldset>

          <!-- Seção Rodapé -->
          <fieldset>
            <legend>Rodapé</legend>

            <div class="form-section">
              <h4>Doações e Contato</h4>
              <div class="form-group">
                <label for="footer-pix-text">Texto do PIX:</label>
                <textarea id="footer-pix-text" name="footer-pix-text" required>
Para auxilio financeiro, escaneie o QR Code ao lado ou envie um pix para o CNPJ 06.332.442/0001-11.</textarea
                >
              </div>
              <div class="form-group">
                <label for="footer-donations">QR code:</label>
                <img
                  src=""
                  alt="Pré-visualização"
                  class="image-preview-code"
                  id="qr-code-preview"
                />
                <input
                  type="file"
                  id="qr-code"
                  name="code-donation"
                  accept="image/*"
                />
              </div>
              <div class="form-group">
                <label for="footer-mantimentos-list"
                  >Itens para Doação (um por linha):</label
                >
                <textarea
                  id="footer-mantimentos-list"
                  name="footer-mantimentos-list"
                  rows="7"
                  required
                >
Ração para cães e gatos (filhotes e adultos)
Areia higiênica para gatos
Vermífugos e antipulgas
Materiais de limpeza (água sanitária, desinfetante)
Jornais velhos e cobertores
Brinquedos
Vasilhas de água e comida</textarea
                >
              </div>
              <div class="form-group">
                <label for="footer-contact-phone">Telefone de Apoio:</label>
                <input
                  type="text"
                  id="footer-contact-phone"
                  name="footer-contact-phone"
                  value="(35) 99999-9999"
                  required
                />
              </div>
              <div class="form-group">
                <label for="footer-address-input">Endereço da Sede:</label>
                <textarea
                  id="footer-address-input"
                  name="footer-address-input"
                  rows="3"
                  required
                >
Rua Exemplo, 123 - Centro, Santa Rita do Sapucaí - MG</textarea
                >
              </div>
              <div class="form-group">
                <label for="footer-social-facebook">Texto Facebook:</label>
                <input
                  type="text"
                  id="footer-social-facebook"
                  name="footer-social-facebook"
                  value="Sociedade Protetora dos Animais de SRS - MG"
                  required
                />
              </div>
              <div class="form-group">
                <label for="footer-social-instagram">Usuário Instagram:</label>
                <input
                  type="text"
                  id="footer-social-instagram"
                  name="footer-social-instagram"
                  value="@spasrsmg"
                  required
                />
              </div>
              <div class="form-group">
                <label for="logo">Logo da associação:</label>
                <img
                  src=""
                  alt="Pré-visualização"
                  class="image-preview-logo"
                  id="logo-preview"
                />
                <input type="file" id="logo" name="logo" accept="image/*" />
              </div>
            </div>
          </fieldset>

          <div class="form-actions">
            <button type="submit">Salvar Alterações</button>
            <button type="button" id="cancel-edit">Cancelar</button>
          </div>
        </form>
      </div>
    </div>
  </body>
</html>
</file>

</files>
